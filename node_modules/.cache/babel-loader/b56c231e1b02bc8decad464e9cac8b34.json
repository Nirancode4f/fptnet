{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport dateFormat from \"dateformat\"; ///take the time\n\nfunction FomatData(date) {\n  _s();\n\n  const [timeString, settimeString] = useState(Date());\n  const [CmtDate, setCmtDate] = useState(Date());\n  const d = date;\n\n  function TimePost() {\n    let currentyear = dateFormat(timeString, \"yyyy\");\n    let day = dateFormat(d, \"d\");\n    let month = dateFormat(d, \"m\");\n    let year = dateFormat(d, \"yyyy\");\n    let hour = dateFormat(d, \"h\");\n    let minute = dateFormat(d, \"MM\");\n    let TT = dateFormat(d, \"TT\");\n\n    if (currentyear === year) {\n      const fo = `${day} tháng ${month} lúc ${hour}:${minute} ${TT}`;\n      settimeString(fo);\n    } else {\n      const fo = `${day}/${month}/${year}`;\n      settimeString(fo);\n    }\n  }\n\n  function CmtTime() {\n    let currentyear = dateFormat(CmtDate, \"yyyy\");\n    let day = dateFormat(d, \"d\");\n    let month = dateFormat(d, \"m\");\n    let year = dateFormat(d, \"yyyy\");\n    let hour = dateFormat(d, \"h\");\n    let minute = dateFormat(d, \"MM\");\n    let TT = dateFormat(d, \"TT\");\n\n    if (currentyear === year) {\n      const fo = `${hour}:${minute}${TT} ${day}/${month} `;\n      setCmtDate(fo);\n    } else {\n      const fo = `${day}/${month}/${year}`;\n      setCmtDate(fo);\n    }\n  }\n\n  useEffect(() => {\n    TimePost();\n    CmtTime();\n  }, []); /// you can adđ more object if you want \n  //   like {timeString, data , ... pla pla pla}\n  // if you want take it out. just use like ||   const { data } = Fomatdata()\n  // khaangnguyeen ... \n\n  return {\n    timeString,\n    CmtDate\n  };\n}\n\n_s(FomatData, \"W7Kmiai5iDVKjNKBdvZ9wZ0pXqA=\");\n\n_c = FomatData;\nexport default FomatData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FomatData\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Máy tính/fptnet/src/helpGUI/FomatData.js"],"names":["useEffect","useState","dateFormat","FomatData","date","timeString","settimeString","Date","CmtDate","setCmtDate","d","TimePost","currentyear","day","month","year","hour","minute","TT","fo","CmtTime"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAGA;;AACA,SAASC,SAAT,CAAmBC,IAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAACM,IAAI,EAAL,CAA5C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAACM,IAAI,EAAL,CAAtC;AAEA,QAAMG,CAAC,GAAGN,IAAV;;AAEA,WAASO,QAAT,GAAoB;AAEhB,QAAIC,WAAW,GAAGV,UAAU,CAACG,UAAD,EAAY,MAAZ,CAA5B;AACA,QAAIQ,GAAG,GAAGX,UAAU,CAACQ,CAAD,EAAG,GAAH,CAApB;AACA,QAAII,KAAK,GAAGZ,UAAU,CAACQ,CAAD,EAAG,GAAH,CAAtB;AACA,QAAIK,IAAI,GAAGb,UAAU,CAACQ,CAAD,EAAI,MAAJ,CAArB;AACA,QAAIM,IAAI,GAAGd,UAAU,CAACQ,CAAD,EAAG,GAAH,CAArB;AACA,QAAIO,MAAM,GAAGf,UAAU,CAACQ,CAAD,EAAG,IAAH,CAAvB;AACA,QAAIQ,EAAE,GAAGhB,UAAU,CAACQ,CAAD,EAAG,IAAH,CAAnB;;AAGA,QAAIE,WAAW,KAAKG,IAApB,EACA;AACI,YAAMI,EAAE,GAAI,GAAEN,GAAI,UAASC,KAAM,QAAOE,IAAK,IAAGC,MAAO,IAAGC,EAAG,EAA7D;AACAZ,MAAAA,aAAa,CAACa,EAAD,CAAb;AAEH,KALD,MAMK;AAED,YAAMA,EAAE,GAAI,GAAEN,GAAI,IAAGC,KAAM,IAAGC,IAAK,EAAnC;AACAT,MAAAA,aAAa,CAACa,EAAD,CAAb;AACF;AAIL;;AAED,WAASC,OAAT,GAAmB;AAEf,QAAIR,WAAW,GAAGV,UAAU,CAACM,OAAD,EAAS,MAAT,CAA5B;AACA,QAAIK,GAAG,GAAGX,UAAU,CAACQ,CAAD,EAAG,GAAH,CAApB;AACA,QAAII,KAAK,GAAGZ,UAAU,CAACQ,CAAD,EAAG,GAAH,CAAtB;AACA,QAAIK,IAAI,GAAGb,UAAU,CAACQ,CAAD,EAAI,MAAJ,CAArB;AACA,QAAIM,IAAI,GAAGd,UAAU,CAACQ,CAAD,EAAG,GAAH,CAArB;AACA,QAAIO,MAAM,GAAGf,UAAU,CAACQ,CAAD,EAAG,IAAH,CAAvB;AACA,QAAIQ,EAAE,GAAGhB,UAAU,CAACQ,CAAD,EAAG,IAAH,CAAnB;;AAGA,QAAIE,WAAW,KAAKG,IAApB,EACA;AACI,YAAMI,EAAE,GAAI,GAAEH,IAAK,IAAGC,MAAO,GAAEC,EAAG,IAAGL,GAAI,IAAGC,KAAM,GAAlD;AACAL,MAAAA,UAAU,CAACU,EAAD,CAAV;AAEH,KALD,MAMK;AAED,YAAMA,EAAE,GAAI,GAAEN,GAAI,IAAGC,KAAM,IAAGC,IAAK,EAAnC;AACAN,MAAAA,UAAU,CAACU,EAAD,CAAV;AACF;AAIL;;AAEDnB,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,QAAQ;AACRS,IAAAA,OAAO;AACV,GAHQ,EAGP,EAHO,CAAT,CA5DsB,CAiEpB;AACF;AACA;AACJ;;AACI,SAAO;AAACf,IAAAA,UAAD;AAAcG,IAAAA;AAAd,GAAP;AAEH;;GAvEQL,S;;KAAAA,S;AAyET,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport dateFormat from \"dateformat\";\r\n\r\n\r\n///take the time\r\nfunction FomatData(date)  {\r\n    const [timeString, settimeString] = useState(Date())\r\n    const [CmtDate, setCmtDate] = useState(Date())\r\n\r\n    const d = date\r\n\r\n    function TimePost (){\r\n\r\n        let currentyear = dateFormat(timeString,\"yyyy\")\r\n        let day = dateFormat(d,\"d\")\r\n        let month = dateFormat(d,\"m\")\r\n        let year = dateFormat(d, \"yyyy\")    \r\n        let hour = dateFormat(d,\"h\")\r\n        let minute = dateFormat(d,\"MM\")\r\n        let TT = dateFormat(d,\"TT\")\r\n        \r\n    \r\n        if (currentyear === year)\r\n        { \r\n            const fo = `${day} tháng ${month} lúc ${hour}:${minute} ${TT}`\r\n            settimeString(fo)\r\n            \r\n        }\r\n        else { \r\n    \r\n            const fo = `${day}/${month}/${year}`\r\n            settimeString(fo)\r\n         }\r\n        \r\n\r\n\r\n    }\r\n  \r\n    function CmtTime (){\r\n\r\n        let currentyear = dateFormat(CmtDate,\"yyyy\")\r\n        let day = dateFormat(d,\"d\")\r\n        let month = dateFormat(d,\"m\")\r\n        let year = dateFormat(d, \"yyyy\")    \r\n        let hour = dateFormat(d,\"h\")\r\n        let minute = dateFormat(d,\"MM\")\r\n        let TT = dateFormat(d,\"TT\")\r\n        \r\n    \r\n        if (currentyear === year)\r\n        { \r\n            const fo = `${hour}:${minute}${TT} ${day}/${month} `\r\n            setCmtDate(fo)\r\n            \r\n        }\r\n        else { \r\n    \r\n            const fo = `${day}/${month}/${year}`\r\n            setCmtDate(fo)\r\n         }\r\n        \r\n\r\n\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        TimePost()\r\n        CmtTime()\r\n    },[])\r\n    \r\n      /// you can adđ more object if you want \r\n    //   like {timeString, data , ... pla pla pla}\r\n    // if you want take it out. just use like ||   const { data } = Fomatdata()\r\n// khaangnguyeen ... \r\n    return {timeString , CmtDate};\r\n     \r\n}\r\n\r\nexport default FomatData"]},"metadata":{},"sourceType":"module"}
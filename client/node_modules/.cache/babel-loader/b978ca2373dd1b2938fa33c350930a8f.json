{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\Messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport MainLayout from \"../../component/MainPage/MainLayout\";\nimport ChatBoxContainer from \"./childComponents/ChatBoxComps/ChatBoxContainer\";\nimport ContactSideBar from \"./childComponents/ContactSideBar\";\nimport \"./Messenger.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\nexport default function Messenger() {\n  _s();\n\n  // const [listFriends, setListFriends] = useState([]);\n  // const [listTeachers, setListTeachers] = useState([]);\n  // const [listGroups, setListGroups] = useState([]);\n  const [currentItem, setCurrentItem] = useState({}); // const [totalMessages, setTotalMessages] = useState(0);\n  // const [messages, setMessages] = useState([]);\n  // const [blocks, setBlocks] = useState(0);\n  // const targetId = useRef(\"\");\n  // const [convsId, setConvsId] = useState(\"\");\n\n  const userId = JSON.parse(localStorage.getItem(\"loginData\")).user._id; // // get data from contact item\n\n\n  const handleGetItem = (e, data) => {\n    setCurrentItem(data);\n    console.log(currentItem);\n  }; // // block messages calculator\n  // const calBlocks = (totalMess) => {\n  //   return (totalMess - (totalMess % 20)) / 20 + !!(totalMess % 20);\n  // };\n  // // get conversation id\n  // const getConvsId = async (uId, tId) => {\n  //   let result;\n  //   try {\n  //     result = await axios.post(\n  //       `${URL_MAIN}/api/conversation/getfriendconv`,\n  //       {\n  //         userId: uId,\n  //         friendId: tId,\n  //       },\n  //       {\n  //         header: { \"Content-Type\": \"application/json\" },\n  //       }\n  //     );\n  //   } catch (err) {\n  //     console.log(err.message);\n  //   }\n  //   return result;\n  // };\n  // // get block message\n  // const getConvsMessages = async (uId, tId, blocksIndex) => {\n  //   let result;\n  //   try {\n  //     result = await axios.post(\n  //       `${URL_MAIN}/api/message/get`,\n  //       {\n  //         userId: uId,\n  //         conversationId: tId,\n  //         block: blocksIndex,\n  //       },\n  //       {\n  //         header: { \"Content-Type\": \"application/json\" },\n  //       }\n  //     );\n  //   } catch (err) {\n  //     console.log(err.message);\n  //   }\n  //   return result;\n  // };\n  // // get friend list\n  // const getListFriends = async (userId) => {\n  //   let result;\n  //   try {\n  //     result = await axios.post(\n  //       `${URL_MAIN}/api/friend/get`,\n  //       {\n  //         userId: userId,\n  //       },\n  //       {\n  //         header: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //       }\n  //     );\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  //   return result;\n  // };\n  // // get list teacher\n  // const getListTeachers = async (userId) => {\n  //   let result;\n  //   try {\n  //     result = await axios.get(`${URL_MAIN}/api/user/teachers`);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  //   return result.data.teachers;\n  // };\n  // //take list groups here\n  // const getListGroups = async (userId) => {\n  //   let result;\n  //   try {\n  //     result = await axios.post(\n  //       `${URL_MAIN}/api/group/conversation/getconvs`,\n  //       {\n  //         userId: userId,\n  //       },\n  //       {\n  //         header: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //       }\n  //     );\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  //   return result;\n  // };\n  // //take data for the first times\n  // useEffect(() => {\n  //   let isMounted = true;\n  //   //run this to take the friend list\n  //   getListFriends(userId)\n  //     .then((res) => {\n  //       // if component umount before we get api, drop it\n  //       if (isMounted) setListFriends(res.data.friends);\n  //     })\n  //     .catch((err) => console.log(err));\n  //   // run this to take teacherlist\n  //   getListTeachers(userId)\n  //     .then((res) => {\n  //       // if component umount before we get api, drop it\n  //       if (isMounted) setListTeachers(res);\n  //     })\n  //     .catch((err) => console.log(err));\n  //   // run this to take group list\n  //   getListGroups(userId)\n  //     .then((res) => {\n  //       // if component umount before we get api, drop it\n  //       if (isMounted) {\n  //         var data = res.data.conversations;\n  //         setListGroups(data);\n  //       }\n  //     })\n  //     .catch((err) => console.log(err));\n  //   return () => {\n  //     isMounted = false;\n  //   };\n  // }, []);\n  // useEffect(() => {});\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Messenger\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MessengerContainer\",\n        children: [/*#__PURE__*/_jsxDEV(ContactSideBar, {\n          userId: userId,\n          handleGetItem: handleGetItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatBoxContainer, {\n          currentItem: currentItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"L0icB3M0uNCek/db1k9AG63C8yw=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/Messenger/Messenger.jsx"],"names":["axios","React","useState","useEffect","useRef","MainLayout","ChatBoxContainer","ContactSideBar","URL_MAIN","process","env","REACT_APP_URL_MAIN","Messenger","currentItem","setCurrentItem","userId","JSON","parse","localStorage","getItem","user","_id","handleGetItem","e","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,gBAAP,MAA6B,iDAA7B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,QAAQ,GACZC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAkC,oCADpC;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC;AACA;AACA;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C,CALkC,CAMlC;AACA;AACA;AAEA;AACA;;AACA,QAAMa,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,EAA8CC,IAA9C,CAAmDC,GAAlE,CAZkC,CAclC;;;AACA,QAAMC,aAAa,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AACjCV,IAAAA,cAAc,CAACU,IAAD,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAZ;AACD,GAHD,CAfkC,CAoBlC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCAGE,QAAC,cAAD;AAAgB,UAAA,MAAM,EAAEE,MAAxB;AAAgC,UAAA,aAAa,EAAEO;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAHF,eAOE,QAAC,gBAAD;AAAkB,UAAA,WAAW,EAAET;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAgBD;;GA7KuBD,S;;KAAAA,S","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport MainLayout from \"../../component/MainPage/MainLayout\";\r\nimport ChatBoxContainer from \"./childComponents/ChatBoxComps/ChatBoxContainer\";\r\nimport ContactSideBar from \"./childComponents/ContactSideBar\";\r\n\r\nimport \"./Messenger.css\";\r\n\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\r\n\r\nexport default function Messenger() {\r\n  // const [listFriends, setListFriends] = useState([]);\r\n  // const [listTeachers, setListTeachers] = useState([]);\r\n  // const [listGroups, setListGroups] = useState([]);\r\n\r\n  const [currentItem, setCurrentItem] = useState({});\r\n  // const [totalMessages, setTotalMessages] = useState(0);\r\n  // const [messages, setMessages] = useState([]);\r\n  // const [blocks, setBlocks] = useState(0);\r\n\r\n  // const targetId = useRef(\"\");\r\n  // const [convsId, setConvsId] = useState(\"\");\r\n  const userId = JSON.parse(localStorage.getItem(\"loginData\")).user._id;\r\n\r\n  // // get data from contact item\r\n  const handleGetItem = (e, data) => {\r\n    setCurrentItem(data);\r\n    console.log(currentItem);\r\n  };\r\n\r\n  // // block messages calculator\r\n  // const calBlocks = (totalMess) => {\r\n  //   return (totalMess - (totalMess % 20)) / 20 + !!(totalMess % 20);\r\n  // };\r\n\r\n  // // get conversation id\r\n  // const getConvsId = async (uId, tId) => {\r\n  //   let result;\r\n  //   try {\r\n  //     result = await axios.post(\r\n  //       `${URL_MAIN}/api/conversation/getfriendconv`,\r\n  //       {\r\n  //         userId: uId,\r\n  //         friendId: tId,\r\n  //       },\r\n  //       {\r\n  //         header: { \"Content-Type\": \"application/json\" },\r\n  //       }\r\n  //     );\r\n  //   } catch (err) {\r\n  //     console.log(err.message);\r\n  //   }\r\n  //   return result;\r\n  // };\r\n  // // get block message\r\n  // const getConvsMessages = async (uId, tId, blocksIndex) => {\r\n  //   let result;\r\n  //   try {\r\n  //     result = await axios.post(\r\n  //       `${URL_MAIN}/api/message/get`,\r\n  //       {\r\n  //         userId: uId,\r\n  //         conversationId: tId,\r\n  //         block: blocksIndex,\r\n  //       },\r\n  //       {\r\n  //         header: { \"Content-Type\": \"application/json\" },\r\n  //       }\r\n  //     );\r\n  //   } catch (err) {\r\n  //     console.log(err.message);\r\n  //   }\r\n  //   return result;\r\n  // };\r\n\r\n  // // get friend list\r\n  // const getListFriends = async (userId) => {\r\n  //   let result;\r\n  //   try {\r\n  //     result = await axios.post(\r\n  //       `${URL_MAIN}/api/friend/get`,\r\n  //       {\r\n  //         userId: userId,\r\n  //       },\r\n  //       {\r\n  //         header: {\r\n  //           \"Content-Type\": \"application/json\",\r\n  //         },\r\n  //       }\r\n  //     );\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n  //   return result;\r\n  // };\r\n\r\n  // // get list teacher\r\n  // const getListTeachers = async (userId) => {\r\n  //   let result;\r\n  //   try {\r\n  //     result = await axios.get(`${URL_MAIN}/api/user/teachers`);\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n  //   return result.data.teachers;\r\n  // };\r\n\r\n  // //take list groups here\r\n  // const getListGroups = async (userId) => {\r\n  //   let result;\r\n  //   try {\r\n  //     result = await axios.post(\r\n  //       `${URL_MAIN}/api/group/conversation/getconvs`,\r\n  //       {\r\n  //         userId: userId,\r\n  //       },\r\n  //       {\r\n  //         header: {\r\n  //           \"Content-Type\": \"application/json\",\r\n  //         },\r\n  //       }\r\n  //     );\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n  //   return result;\r\n  // };\r\n\r\n  // //take data for the first times\r\n\r\n  // useEffect(() => {\r\n  //   let isMounted = true;\r\n\r\n  //   //run this to take the friend list\r\n  //   getListFriends(userId)\r\n  //     .then((res) => {\r\n  //       // if component umount before we get api, drop it\r\n  //       if (isMounted) setListFriends(res.data.friends);\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n\r\n  //   // run this to take teacherlist\r\n  //   getListTeachers(userId)\r\n  //     .then((res) => {\r\n  //       // if component umount before we get api, drop it\r\n  //       if (isMounted) setListTeachers(res);\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n\r\n  //   // run this to take group list\r\n  //   getListGroups(userId)\r\n  //     .then((res) => {\r\n  //       // if component umount before we get api, drop it\r\n  //       if (isMounted) {\r\n  //         var data = res.data.conversations;\r\n  //         setListGroups(data);\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n\r\n  //   return () => {\r\n  //     isMounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {});\r\n\r\n  return (\r\n    <>\r\n      <MainLayout />\r\n      <div className=\"Messenger\">\r\n        <div className=\"MessengerContainer\">\r\n          {/* friend list */}\r\n\r\n          <ContactSideBar userId={userId} handleGetItem={handleGetItem} />\r\n\r\n          {/* chatbox */}\r\n\r\n          <ChatBoxContainer currentItem={currentItem} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\Messenger\\\\childComponents\\\\ChatBoxComps\\\\ChatBoxContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport ChatBox from \"./ChatBox\";\nimport ChatBoxFooter from \"./ChatBoxFooter\";\nimport ChatBoxHeader from \"./ChatBoxHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || `https://fanserverapi.herokuapp.com`;\nexport default function ChatBoxContainer(props) {\n  _s();\n\n  const {\n    currentItem,\n    userId\n  } = props;\n  const [currentConvsId, setCurrentConvsId] = useState(\"\");\n  const [postMessageData, setPostMessageData] = useState({\n    userId: \"\",\n    conversationId: \"\",\n    content: \"\",\n    image: \"\"\n  });\n\n  const handlePostMessage = data => {\n    const conversationId = currentConvsId;\n    setPostMessageData({ ...postMessage,\n      userId,\n      conversationId,\n      data\n    });\n    console.log(\"ðŸš€ ~ file: ChatBoxContainer.jsx ~ line 25 ~ handlePostMessage ~ { ...postMessage, userId, conversationId, data }\", { ...postMessage,\n      userId,\n      conversationId,\n      ...data\n    });\n\n    if (currentItem.contact_type === \"group\") {\n      axios.post(`${URL_MAIN}/api/group/message/create`, {\n        postMessageData\n      }).then(res => {\n        res.data.success ? console.log(\"Gá»­i tin nháº¯n thÃ nh cÃ´ng\", res.data) : console.log(res.data);\n      }).catch(res => console.log(res));\n    } else {\n      axios.post(`${URL_MAIN}/api/message/create`, {\n        postMessageData\n      }).then(res => {\n        res.data.success ? console.log(\"Gá»­i tin nháº¯n thÃ nh cÃ´ng\") : console.log(\"gá»­i tin tháº¥t báº¡i\");\n      }).catch(res => console.log(res));\n    }\n  };\n\n  const handleConvsIdChange = convsId => {\n    setCurrentConvsId(convsId);\n    console.log(convsId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChatBoxHeader, {\n      headerData: {\n        avatar: currentItem.avatar,\n        name: currentItem.name\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      chatData: {\n        targetId: currentItem.id,\n        convs_type: currentItem.contact_type,\n        targetAvt: currentItem.avatar\n      },\n      onCurrentConvsIdChange: handleConvsIdChange,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBoxFooter, {\n      onMessagePost: handlePostMessage,\n      conversation: currentConvsId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatBoxContainer, \"BtKQgiuwcQFhl7CKgHRfi4lvfzc=\");\n\n_c = ChatBoxContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBoxContainer\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/Messenger/childComponents/ChatBoxComps/ChatBoxContainer.jsx"],"names":["axios","React","useEffect","useState","ChatBox","ChatBoxFooter","ChatBoxHeader","URL_MAIN","process","env","REACT_APP_URL_MAIN","ChatBoxContainer","props","currentItem","userId","currentConvsId","setCurrentConvsId","postMessageData","setPostMessageData","conversationId","content","image","handlePostMessage","data","postMessage","console","log","contact_type","post","then","res","success","catch","handleConvsIdChange","convsId","avatar","name","targetId","id","convs_type","targetAvt"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport ChatBox from \"./ChatBox\";\r\nimport ChatBoxFooter from \"./ChatBoxFooter\";\r\nimport ChatBoxHeader from \"./ChatBoxHeader\";\r\n\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || `https://fanserverapi.herokuapp.com`;\r\n\r\nexport default function ChatBoxContainer(props) {\r\n  const { currentItem, userId } = props;\r\n\r\n  const [currentConvsId, setCurrentConvsId] = useState(\"\");\r\n  const [postMessageData, setPostMessageData] = useState({\r\n    userId: \"\",\r\n    conversationId: \"\",\r\n    content: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const handlePostMessage = (data) => {\r\n    const conversationId = currentConvsId;\r\n    setPostMessageData({ ...postMessage, userId, conversationId, data });\r\n    console.log(\r\n      \"ðŸš€ ~ file: ChatBoxContainer.jsx ~ line 25 ~ handlePostMessage ~ { ...postMessage, userId, conversationId, data }\",\r\n      { ...postMessage, userId, conversationId, ...data }\r\n    );\r\n\r\n    if (currentItem.contact_type === \"group\") {\r\n      axios\r\n        .post(`${URL_MAIN}/api/group/message/create`, {\r\n          postMessageData,\r\n        })\r\n        .then((res) => {\r\n          res.data.success\r\n            ? console.log(\"Gá»­i tin nháº¯n thÃ nh cÃ´ng\", res.data)\r\n            : console.log(res.data);\r\n        })\r\n        .catch((res) => console.log(res));\r\n    } else {\r\n      axios\r\n        .post(`${URL_MAIN}/api/message/create`, {\r\n          postMessageData,\r\n        })\r\n        .then((res) => {\r\n          res.data.success\r\n            ? console.log(\"Gá»­i tin nháº¯n thÃ nh cÃ´ng\")\r\n            : console.log(\"gá»­i tin tháº¥t báº¡i\");\r\n        })\r\n        .catch((res) => console.log(res));\r\n    }\r\n  };\r\n\r\n  const handleConvsIdChange = (convsId) => {\r\n    setCurrentConvsId(convsId);\r\n    console.log(convsId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ChatBoxHeader\r\n        headerData={{ avatar: currentItem.avatar, name: currentItem.name }}\r\n      />\r\n      <ChatBox\r\n        chatData={{\r\n          targetId: currentItem.id,\r\n          convs_type: currentItem.contact_type,\r\n          targetAvt: currentItem.avatar,\r\n        }}\r\n        onCurrentConvsIdChange={handleConvsIdChange}\r\n        userId={userId}\r\n      />\r\n      <ChatBoxFooter\r\n        onMessagePost={handlePostMessage}\r\n        conversation={currentConvsId}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
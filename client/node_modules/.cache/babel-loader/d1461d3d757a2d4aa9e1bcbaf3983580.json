{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\Messenger\\\\childComponents\\\\ChatBoxComps\\\\ChatBoxContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport ChatBox from \"./ChatBox\";\nimport ChatBoxFooter from \"./ChatBoxFooter\";\nimport ChatBoxHeader from \"./ChatBoxHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || `https://fanserverapi.herokuapp.com`;\nexport default function ChatBoxContainer(props) {\n  _s();\n\n  const {\n    currentItem,\n    userId,\n    onConvsChange,\n    conversationId\n  } = props;\n  const [messageData, setMessageData] = useState({\n    userId: \"\",\n    conversationId: \"\",\n    content: \"\",\n    image: \"\"\n  });\n\n  const postMessageData = messageData => {\n    if (currentItem.contact_type === \"group\") {\n      axios.post(`${URL_MAIN}/api/group/message/create`, messageData).then(res => {\n        res.data.success ? console.log(\"Gửi tin nhắn thành công\", res.data) : console.log(\"gửi tin thất bại\", res.data);\n      }).catch(res => console.log(res));\n    } else {\n      console.log(messageData);\n      axios.post(`${URL_MAIN}/api/message/create`, messageData).then(res => {\n        res.data.success ? console.log(\"Gửi tin nhắn thành công\", res.data) : console.log(\"gửi tin thất bại\", res.data);\n      }).catch(res => console.log(res));\n    }\n  };\n\n  const handleGetMessDataInput = data => {\n    setMessageData({ ...messageData,\n      userId,\n      conversationId,\n      ...data\n    });\n    postMessageData(messageData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChatBoxHeader, {\n      headerData: {\n        avatar: currentItem.avatar,\n        name: currentItem.name\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      chatData: {\n        targetId: currentItem.id,\n        convs_type: currentItem.contact_type,\n        targetAvt: currentItem.avatar\n      },\n      onCurrentConvsIdChange: onConvsChange,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBoxFooter, {\n      onMessagePost: handleGetMessDataInput,\n      conversation: conversationId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatBoxContainer, \"ifMScWegV1tR6gKf7UrxGDeBs1I=\");\n\n_c = ChatBoxContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBoxContainer\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/Messenger/childComponents/ChatBoxComps/ChatBoxContainer.jsx"],"names":["axios","React","useState","ChatBox","ChatBoxFooter","ChatBoxHeader","URL_MAIN","process","env","REACT_APP_URL_MAIN","ChatBoxContainer","props","currentItem","userId","onConvsChange","conversationId","messageData","setMessageData","content","image","postMessageData","contact_type","post","then","res","data","success","console","log","catch","handleGetMessDataInput","avatar","name","targetId","id","convs_type","targetAvt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,QAAQ,GACZC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAmC,oCADrC;AAGA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,aAAvB;AAAsCC,IAAAA;AAAtC,MAAyDJ,KAA/D;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC;AAC7CW,IAAAA,MAAM,EAAE,EADqC;AAE7CE,IAAAA,cAAc,EAAE,EAF6B;AAG7CG,IAAAA,OAAO,EAAE,EAHoC;AAI7CC,IAAAA,KAAK,EAAE;AAJsC,GAAD,CAA9C;;AAOA,QAAMC,eAAe,GAAIJ,WAAD,IAAiB;AACvC,QAAIJ,WAAW,CAACS,YAAZ,KAA6B,OAAjC,EAA0C;AACxCrB,MAAAA,KAAK,CACFsB,IADH,CACS,GAAEhB,QAAS,2BADpB,EACgDU,WADhD,EAEGO,IAFH,CAESC,GAAD,IAAS;AACbA,QAAAA,GAAG,CAACC,IAAJ,CAASC,OAAT,GACIC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,GAAG,CAACC,IAA3C,CADJ,GAEIE,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,GAAG,CAACC,IAApC,CAFJ;AAGD,OANH,EAOGI,KAPH,CAOUL,GAAD,IAASG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CAPlB;AAQD,KATD,MASO;AACLG,MAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACAhB,MAAAA,KAAK,CACFsB,IADH,CACS,GAAEhB,QAAS,qBADpB,EAC0CU,WAD1C,EAEGO,IAFH,CAESC,GAAD,IAAS;AACbA,QAAAA,GAAG,CAACC,IAAJ,CAASC,OAAT,GACIC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,GAAG,CAACC,IAA3C,CADJ,GAEIE,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,GAAG,CAACC,IAApC,CAFJ;AAGD,OANH,EAOGI,KAPH,CAOUL,GAAD,IAASG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CAPlB;AAQD;AACF,GArBD;;AAuBA,QAAMM,sBAAsB,GAAIL,IAAD,IAAU;AACvCR,IAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkBH,MAAAA,MAAlB;AAA0BE,MAAAA,cAA1B;AAA0C,SAAGU;AAA7C,KAAD,CAAd;AACAL,IAAAA,eAAe,CAACJ,WAAD,CAAf;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,UAAU,EAAE;AAAEe,QAAAA,MAAM,EAAEnB,WAAW,CAACmB,MAAtB;AAA8BC,QAAAA,IAAI,EAAEpB,WAAW,CAACoB;AAAhD;AADd;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AACE,MAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAErB,WAAW,CAACsB,EADd;AAERC,QAAAA,UAAU,EAAEvB,WAAW,CAACS,YAFhB;AAGRe,QAAAA,SAAS,EAAExB,WAAW,CAACmB;AAHf,OADZ;AAME,MAAA,sBAAsB,EAAEjB,aAN1B;AAOE,MAAA,MAAM,EAAED;AAPV;AAAA;AAAA;AAAA;AAAA,YAJF,eAaE,QAAC,aAAD;AACE,MAAA,aAAa,EAAEiB,sBADjB;AAEE,MAAA,YAAY,EAAEf;AAFhB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAoBD;;GA1DuBL,gB;;KAAAA,gB","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport ChatBox from \"./ChatBox\";\r\nimport ChatBoxFooter from \"./ChatBoxFooter\";\r\nimport ChatBoxHeader from \"./ChatBoxHeader\";\r\n\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || `https://fanserverapi.herokuapp.com`;\r\n\r\nexport default function ChatBoxContainer(props) {\r\n  const { currentItem, userId, onConvsChange, conversationId } = props;\r\n\r\n  const [messageData, setMessageData] = useState({\r\n    userId: \"\",\r\n    conversationId: \"\",\r\n    content: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const postMessageData = (messageData) => {\r\n    if (currentItem.contact_type === \"group\") {\r\n      axios\r\n        .post(`${URL_MAIN}/api/group/message/create`, messageData)\r\n        .then((res) => {\r\n          res.data.success\r\n            ? console.log(\"Gửi tin nhắn thành công\", res.data)\r\n            : console.log(\"gửi tin thất bại\", res.data);\r\n        })\r\n        .catch((res) => console.log(res));\r\n    } else {\r\n      console.log(messageData);\r\n      axios\r\n        .post(`${URL_MAIN}/api/message/create`, messageData)\r\n        .then((res) => {\r\n          res.data.success\r\n            ? console.log(\"Gửi tin nhắn thành công\", res.data)\r\n            : console.log(\"gửi tin thất bại\", res.data);\r\n        })\r\n        .catch((res) => console.log(res));\r\n    }\r\n  };\r\n\r\n  const handleGetMessDataInput = (data) => {\r\n    setMessageData({ ...messageData, userId, conversationId, ...data });\r\n    postMessageData(messageData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ChatBoxHeader\r\n        headerData={{ avatar: currentItem.avatar, name: currentItem.name }}\r\n      />\r\n      <ChatBox\r\n        chatData={{\r\n          targetId: currentItem.id,\r\n          convs_type: currentItem.contact_type,\r\n          targetAvt: currentItem.avatar,\r\n        }}\r\n        onCurrentConvsIdChange={onConvsChange}\r\n        userId={userId}\r\n      />\r\n      <ChatBoxFooter\r\n        onMessagePost={handleGetMessDataInput}\r\n        conversation={conversationId}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
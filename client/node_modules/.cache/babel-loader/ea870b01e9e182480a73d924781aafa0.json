{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\component\\\\Profile\\\\PostPopup\\\\CmtPost\\\\CmtBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport CmtUser from './CmtUser';\nimport ReactDOM from 'react-dom';\nimport { bake_cookie, read_cookie, delete_cookie } from \"sfcookies\";\nimport axios from \"axios\";\nimport { CircularProgress, LinearProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\nconst error = \"https://upload.wikimedia.org/wikipedia/commons/c/c7/No_Pic.jpg\";\n\nfunction CmtBox(props) {\n  _s();\n\n  const {\n    postData\n  } = props;\n  const [Block, setBlock] = useState(1);\n  const [isunmound, setisunmound] = useState(true);\n  const [Usercmt, setUsercmt] = useState([]);\n  const [ShowMore, setShowMore] = useState(Usercmt.length < postData.totalcmt ? true : false);\n  const [Loading, setLoading] = useState(false);\n\n  const Getaxios = () => {\n    try {\n      axios.post(`${URL_MAIN}/api/comment/get`, {\n        \"postId\": `${postData._id}`,\n        \"block\": Block,\n        \"sorttype\": 1\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': read_cookie(\"accessToken\")\n        }\n      }).then(res => {\n        setLoading(false); // after unmount component but asynchronous task still run, drop it.\n\n        if (isunmound) {\n          const newUsercmt = [...Usercmt];\n          let a = Block + 1;\n          setBlock(a); // newUsercmt.push(res.data.comments[0])\n\n          let sumUsercmt = newUsercmt.concat(res.data.comments);\n          setUsercmt(sumUsercmt);\n        }\n      }).catch(err => {\n        console.log(err.message);\n      });\n      setLoading(true);\n    } catch (error) {\n      // console log error\n      console.log(error);\n    }\n  }; // run this shit first\n\n\n  useEffect(() => {\n    // run first\n    // check if component is mounte\n    Getaxios();\n    return () => {\n      setisunmound(false);\n    };\n  }, []);\n  useEffect(() => {\n    if (Usercmt.length < postData.totalcmt) {\n      setShowMore(true);\n    } else {\n      setShowMore(false);\n    }\n\n    var e = Usercmt.map(cmt => /*#__PURE__*/_jsxDEV(CmtUser, {\n      CmtInfor: cmt\n    }, cmt._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this));\n    ReactDOM.render(e, document.getElementById(\"cmt_ele\"));\n    return;\n  });\n\n  const handleScrollCmt = e => {\n    Getaxios();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-wiew-detail-post-content-comment-content\",\n        id: \"cmt_ele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), Loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n        color: \"inherit\",\n        style: {\n          color: \"#f36f21\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 22\n      }, this), ShowMore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"click-for-more-btn\",\n        onClick: handleScrollCmt,\n        children: \"Click for more...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CmtBox, \"BgEKWVJ21HnXlRdAjqdl3RBGBu0=\");\n\n_c = CmtBox;\nexport default CmtBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CmtBox\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/component/Profile/PostPopup/CmtPost/CmtBox.jsx"],"names":["React","useState","useEffect","CmtUser","ReactDOM","bake_cookie","read_cookie","delete_cookie","axios","CircularProgress","LinearProgress","URL_MAIN","process","env","REACT_APP_URL_MAIN","error","CmtBox","props","postData","Block","setBlock","isunmound","setisunmound","Usercmt","setUsercmt","ShowMore","setShowMore","length","totalcmt","Loading","setLoading","Getaxios","post","_id","headers","then","res","newUsercmt","a","sumUsercmt","concat","data","comments","catch","err","console","log","message","e","map","cmt","render","document","getElementById","handleScrollCmt","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,aAAnC,QAAwD,WAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,eAAjD;;AAEA,MAAMC,QAAQ,GACZC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAkC,oCADpC;AAGA,MAAMC,KAAK,GACT,gEADF;;AAMA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAGrB,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAEsB,OAAO,CAACI,MAAR,GAAiBT,QAAQ,CAACU,QAA1B,GACQ,IADR,GACe,KADjB,CAAxC;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,KAAD,CAAtC;;AAIE,QAAM8B,QAAQ,GAAG,MAAI;AACnB,QAAI;AACFvB,MAAAA,KAAK,CACFwB,IADH,CAEK,GAAErB,QAAS,kBAFhB,EAGI;AACE,kBAAW,GAAEO,QAAQ,CAACe,GAAI,EAD5B;AAEE,iBAASd,KAFX;AAGE,oBAAY;AAHd,OAHJ,EAQI;AACEe,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,2BAAiB5B,WAAW,CAAC,aAAD;AAFrB;AADX,OARJ,EAgBG6B,IAhBH,CAgBSC,GAAD,IAAS;AACbN,QAAAA,UAAU,CAAC,KAAD,CAAV,CADa,CAEb;;AACA,YAAIT,SAAJ,EAAe;AACjB,gBAAMgB,UAAU,GAAG,CAAC,GAAGd,OAAJ,CAAnB;AACI,cAAIe,CAAC,GAAGnB,KAAK,GAAG,CAAhB;AACAC,UAAAA,QAAQ,CAACkB,CAAD,CAAR,CAHa,CAIb;;AACA,cAAIC,UAAU,GAAGF,UAAU,CAACG,MAAX,CAAkBJ,GAAG,CAACK,IAAJ,CAASC,QAA3B,CAAjB;AACAlB,UAAAA,UAAU,CAACe,UAAD,CAAV;AAED;AACF,OA5BH,EA6BGI,KA7BH,CA6BUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD,OA/BH;AAgCEjB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAlCD,CAkCE,OAAOf,KAAP,EAAc;AACd;AACA8B,MAAAA,OAAO,CAACC,GAAR,CAAY/B,KAAZ;AACD;AACF,GAvCD,CAbmB,CA4DrB;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA6B,IAAAA,QAAQ;AAER,WAAO,MAAI;AACTT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD;AAID,GATQ,EASP,EATO,CAAT;AAYApB,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAGqB,OAAO,CAACI,MAAR,GAAiBT,QAAQ,CAACU,QAA7B,EACA;AACEF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGK;AACHA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,QAAIsB,CAAC,GAAGzB,OAAO,CAAC0B,GAAR,CAAaC,GAAD,iBAChB,QAAC,OAAD;AAAwB,MAAA,QAAQ,EAAEA;AAAlC,OAAcA,GAAG,CAACjB,GAAlB;AAAA;AAAA;AAAA;AAAA,YADI,CAAR;AAGE7B,IAAAA,QAAQ,CAAC+C,MAAT,CAAgBH,CAAhB,EAAmBI,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAnB;AAEJ;AACC,GAfQ,CAAT;;AAmBA,QAAMC,eAAe,GAAIN,CAAD,IAAK;AAE3BjB,IAAAA,QAAQ;AAET,GAJD;;AAMA,sBAEE;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,cADZ;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,gDAAf;AAAgE,QAAA,EAAE,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,cAFF,EASIF,OAAO,iBAAI,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,SAAtB;AAAgC,QAAA,KAAK,EAAE;AAAC0B,UAAAA,KAAK,EAAG;AAAT;AAAvC;AAAA;AAAA;AAAA;AAAA,cATf,EAUI9B,QAAQ,iBAAI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,OAAO,EAAE6B,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAkBD;;GApHQtC,M;;KAAAA,M;AAsHT,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport CmtUser from './CmtUser';\r\nimport ReactDOM from 'react-dom';\r\nimport { bake_cookie, read_cookie, delete_cookie } from \"sfcookies\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress, LinearProgress } from '@mui/material';\r\n\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\r\n\r\nconst error =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/c/c7/No_Pic.jpg\";\r\n\r\n\r\n\r\n\r\nfunction CmtBox(props) {\r\n\r\n\r\n  const { postData } = props\r\n  const [Block, setBlock] = useState(1)\r\n  const [isunmound, setisunmound] = useState(true)\r\n  const [Usercmt, setUsercmt] = useState([])\r\n  const [ShowMore, setShowMore] = useState( Usercmt.length < postData.totalcmt ?\r\n                                                    true : false         )\r\n  const [Loading, setLoading] = useState(false)\r\n\r\n\r\n\r\n    const Getaxios = ()=>{\r\n      try {\r\n        axios\r\n          .post(\r\n            `${URL_MAIN}/api/comment/get`,\r\n            {\r\n              \"postId\": `${postData._id}`,\r\n              \"block\": Block,\r\n              \"sorttype\": 1\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': read_cookie(\"accessToken\")\r\n  \r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            setLoading(false)\r\n            // after unmount component but asynchronous task still run, drop it.\r\n            if (isunmound) {\r\n          const newUsercmt = [...Usercmt]\r\n              let a = Block + 1\r\n              setBlock(a)\r\n              // newUsercmt.push(res.data.comments[0])\r\n              let sumUsercmt = newUsercmt.concat(res.data.comments)\r\n              setUsercmt(sumUsercmt)\r\n        \r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.message);\r\n          });\r\n          setLoading(true)\r\n      } catch (error) {\r\n        // console log error\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  // run this shit first\r\n  useEffect(() => {\r\n    // run first\r\n    // check if component is mounte\r\n    Getaxios()\r\n\r\n    return ()=>{\r\n      setisunmound(false)\r\n    }\r\n\r\n  },[]);\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    if(Usercmt.length < postData.totalcmt )\r\n    {\r\n      setShowMore(true)\r\n    }else{\r\n      setShowMore(false)\r\n    }\r\n    \r\n    var e = Usercmt.map((cmt) =>\r\n        <CmtUser key={cmt._id}  CmtInfor={cmt} />\r\n      )\r\n      ReactDOM.render(e, document.getElementById(\"cmt_ele\"))\r\n    \r\n  return \r\n  })\r\n\r\n\r\n      \r\n  const handleScrollCmt = (e)=>{\r\n    \r\n    Getaxios()\r\n  \r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <div\r\n        className=\"comment-main\" >\r\n        <div className=\"modal-wiew-detail-post-content-comment-content\" id='cmt_ele'  >\r\n\r\n\r\n   \r\n\r\n\r\n        </div>\r\n        { Loading && <LinearProgress color='inherit' style={{color : \"#f36f21\"}} />}\r\n        { ShowMore && <div className='click-for-more-btn' onClick={handleScrollCmt}>Click for more...</div>}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CmtBox;"]},"metadata":{},"sourceType":"module"}
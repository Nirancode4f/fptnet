{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\Messenger\\\\childComponents\\\\ChatBoxComps\\\\ChatBox.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport ChatBoxMain from \"./ChatBoxMain\";\nimport ChatBoxMessage from \"./ChatBoxMessage\";\nimport ChatBoxMessageOwnerUser from \"./ChatBoxMessageOwnerUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || `https://fanserverapi.herokuapp.com`;\nconst block = 1; //testing\n\nexport default function ChatBox(props) {\n  _s();\n\n  const {\n    chatData,\n    userId\n  } = props;\n  const [convsId, setConvsId] = useState(\"\");\n\n  const getFriendConvsId = (userId, targetId) => {\n    return axios.post(`${URL_MAIN}/api/conversation/getfriendconv`, {\n      userId: userId,\n      friendId: targetId\n    });\n  };\n\n  const getFriendMessages = (userId, convsId, block) => {\n    return axios.post(`${URL_MAIN}/api/message/getblock`, {\n      userId: userId,\n      conversationId: convsId,\n      block: block\n    });\n  };\n\n  useEffect(() => {\n    if (chatData.contact_type === \"friend\") {\n      getFriendConvsId(userId, chatData.targetId).then(res => {\n        return;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatBox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ChatBox, \"Ze7qnd9vqulGrCR3ZkyPxxtBQiQ=\");\n\n_c = ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/Messenger/childComponents/ChatBoxComps/ChatBox.jsx"],"names":["axios","React","useEffect","useState","ChatBoxMain","ChatBoxMessage","ChatBoxMessageOwnerUser","URL_MAIN","process","env","REACT_APP_URL_MAIN","block","ChatBox","props","chatData","userId","convsId","setConvsId","getFriendConvsId","targetId","post","friendId","getFriendMessages","conversationId","contact_type","then","res"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;;AAEA,MAAMC,QAAQ,GACZC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAmC,oCADrC;AAGA,MAAMC,KAAK,GAAG,CAAd,C,CAAiB;;AAEjB,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBF,KAA7B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMe,gBAAgB,GAAG,CAACH,MAAD,EAASI,QAAT,KAAsB;AAC7C,WAAOnB,KAAK,CAACoB,IAAN,CAAY,GAAEb,QAAS,iCAAvB,EAAyD;AAC9DQ,MAAAA,MAAM,EAAEA,MADsD;AAE9DM,MAAAA,QAAQ,EAAEF;AAFoD,KAAzD,CAAP;AAID,GALD;;AAOA,QAAMG,iBAAiB,GAAG,CAACP,MAAD,EAASC,OAAT,EAAkBL,KAAlB,KAA4B;AACpD,WAAOX,KAAK,CAACoB,IAAN,CAAY,GAAEb,QAAS,uBAAvB,EAA+C;AACpDQ,MAAAA,MAAM,EAAEA,MAD4C;AAEpDQ,MAAAA,cAAc,EAAEP,OAFoC;AAGpDL,MAAAA,KAAK,EAAEA;AAH6C,KAA/C,CAAP;AAKD,GAND;;AAQAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,QAAQ,CAACU,YAAT,KAA0B,QAA9B,EAAwC;AACtCN,MAAAA,gBAAgB,CAACH,MAAD,EAASD,QAAQ,CAACK,QAAlB,CAAhB,CAA4CM,IAA5C,CAAkDC,GAAD,IAAS;AACxD;AACD,OAFD;AAGD;AACF,GANQ,CAAT;AAQA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;GAlCuBd,O;;KAAAA,O","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ChatBoxMain from \"./ChatBoxMain\";\r\nimport ChatBoxMessage from \"./ChatBoxMessage\";\r\nimport ChatBoxMessageOwnerUser from \"./ChatBoxMessageOwnerUser\";\r\n\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || `https://fanserverapi.herokuapp.com`;\r\n\r\nconst block = 1; //testing\r\n\r\nexport default function ChatBox(props) {\r\n  const { chatData, userId } = props;\r\n  const [convsId, setConvsId] = useState(\"\");\r\n\r\n  const getFriendConvsId = (userId, targetId) => {\r\n    return axios.post(`${URL_MAIN}/api/conversation/getfriendconv`, {\r\n      userId: userId,\r\n      friendId: targetId,\r\n    });\r\n  };\r\n\r\n  const getFriendMessages = (userId, convsId, block) => {\r\n    return axios.post(`${URL_MAIN}/api/message/getblock`, {\r\n      userId: userId,\r\n      conversationId: convsId,\r\n      block: block,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatData.contact_type === \"friend\") {\r\n      getFriendConvsId(userId, chatData.targetId).then((res) => {\r\n        return;\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ChatBox\">\r\n        {/* <ChatBoxMain messageInfo={messageInfo} /> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
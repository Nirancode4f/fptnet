{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\Messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport MainLayout from \"../../component/MainPage/MainLayout\";\nimport ChatBoxContainer from \"./childComponents/ChatBoxComps/ChatBoxContainer\";\nimport ContactSideBar from \"./childComponents/ContactSideBar\";\nimport \"./Messenger.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TEMP_URL = \"http://localhost:3000\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\nexport default function Messenger() {\n  _s();\n\n  const [listFriends, setListFriends] = useState([]);\n  const [listTeachers, setListTeachers] = useState([]);\n  const [listGroups, setListGroups] = useState([]);\n  const [groupsData, setGroupsData] = useState([]);\n\n  const userId = JSON.parse(localStorage.getItem(\"loginData\")).user._id;\n\n  const getListFriends = async userId => {\n    let result = [];\n\n    try {\n      axios.post(`${TEMP_URL}/api/friend/get`, {\n        userId: userId\n      }, {\n        header: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        result = res.data.friends;\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    return result;\n  };\n\n  const getTeachers = async userId => {\n    let result = [];\n\n    try {\n      axios.get(`${TEMP_URL}/api/user/teachers`, {\n        userId: userId\n      }, {\n        header: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        result = res.data.teachers;\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    return result;\n  };\n\n  const getGroups = async userId => {\n    let result = [];\n\n    try {\n      axios.get(`${TEMP_URL}/api/group/conversation/getconvs`, {\n        userId: userId\n      }, {\n        header: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        result = res.data.GroupConversations;\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    return result;\n  };\n\n  useEffect(() => {// try {\n    //   axios\n    //     .post(\n    //       `${TEMP_URL}/api/friend/get`,\n    //       {\n    //         userId: userId,\n    //       },\n    //       {\n    //         header: {\n    //           \"Content-Type\": \"application/json\",\n    //         },\n    //       }\n    //     )\n    //     .then(async (res) => {\n    //       if (!res.data.success) {\n    //         console.log(\"Get list friends fail\");\n    //       } else {\n    //         setListFriends(res.data.friends);\n    //       }\n    //       return axios.get(`${TEMP_URL}/api/user/teachers`);\n    //     })\n    //     .then(async (res) => {\n    //       if (!res.data.success) {\n    //         console.log(\"Get list teachers fail\");\n    //       } else {\n    //         setListTeachers(res.data.teachers);\n    //       }\n    //       return axios.post(\n    //         `${URL_MAIN}/api/group/conversation/getconvs`,\n    //         {\n    //           userId: userId,\n    //         },\n    //         {\n    //           header: {\n    //             \"Content-Type\": \"application/json\",\n    //           },\n    //         }\n    //       );\n    //     })\n    //     .then(async (res) => {\n    //       if (!res.data.success) {\n    //         console.log(\"Get list groups fail\");\n    //       } else {\n    //         // console.log(res.data.GroupConversations);\n    //         setListGroups(res.data.GroupConversations);\n    //       }\n    //     })\n    //     .catch((err) => console.log(err.message));\n    //   listGroups.map((groupId) => {\n    //     axios\n    //       .post(\n    //         `${TEMP_URL}/api/group/conversation/get`,\n    //         {\n    //           conversationId: groupId,\n    //         },\n    //         {\n    //           header: {\n    //             \"Content-Type\": \"application/json\",\n    //           },\n    //         }\n    //       )\n    //       .then((res) => {\n    //         setGroupsData((prevData) => [...prevData, res.data.conversation]);\n    //         console.log(groupsData);\n    //       })\n    //       .catch((err) => {\n    //         console.log(err);\n    //       });\n    //   });\n    // } catch (err) {\n    //   console.log(err.message);\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Messenger\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MessengerContainer\",\n        children: [/*#__PURE__*/_jsxDEV(ContactSideBar, {\n          listFriends: listFriends,\n          listTeachers: listTeachers,\n          groupsData: groupsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatBoxContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"25MozpSkHI7vmHMgOZY9LO/I6dE=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/Messenger/Messenger.jsx"],"names":["axios","React","useState","useEffect","MainLayout","ChatBoxContainer","ContactSideBar","TEMP_URL","URL_MAIN","process","env","REACT_APP_URL_MAIN","Messenger","listFriends","setListFriends","listTeachers","setListTeachers","listGroups","setListGroups","groupsData","setGroupsData","userId","JSON","parse","localStorage","getItem","user","_id","getListFriends","result","post","header","then","res","data","friends","err","console","log","getTeachers","get","teachers","getGroups","GroupConversations"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MainLayout from \"../../component/MainPage/MainLayout\";\r\nimport ChatBoxContainer from \"./childComponents/ChatBoxComps/ChatBoxContainer\";\r\nimport ContactSideBar from \"./childComponents/ContactSideBar\";\r\n\r\nimport \"./Messenger.css\";\r\n\r\nconst TEMP_URL = \"http://localhost:3000\";\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\r\n\r\nexport default function Messenger() {\r\n  const [listFriends, setListFriends] = useState([]);\r\n  const [listTeachers, setListTeachers] = useState([]);\r\n  const [listGroups, setListGroups] = useState([]);\r\n  const [groupsData, setGroupsData] = useState([]);\r\n  const userId = JSON.parse(localStorage.getItem(\"loginData\")).user._id;\r\n\r\n  const getListFriends = async (userId) => {\r\n    let result = [];\r\n    try {\r\n      axios\r\n        .post(\r\n          `${TEMP_URL}/api/friend/get`,\r\n          {\r\n            userId: userId,\r\n          },\r\n          {\r\n            header: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          result = res.data.friends;\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getTeachers = async (userId) => {\r\n    let result = [];\r\n    try {\r\n      axios\r\n        .get(\r\n          `${TEMP_URL}/api/user/teachers`,\r\n          {\r\n            userId: userId,\r\n          },\r\n          {\r\n            header: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          result = res.data.teachers;\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getGroups = async (userId) => {\r\n    let result = [];\r\n    try {\r\n      axios\r\n        .get(\r\n          `${TEMP_URL}/api/group/conversation/getconvs`,\r\n          {\r\n            userId: userId,\r\n          },\r\n          {\r\n            header: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          result = res.data.GroupConversations;\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // try {\r\n    //   axios\r\n    //     .post(\r\n    //       `${TEMP_URL}/api/friend/get`,\r\n    //       {\r\n    //         userId: userId,\r\n    //       },\r\n    //       {\r\n    //         header: {\r\n    //           \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //       }\r\n    //     )\r\n    //     .then(async (res) => {\r\n    //       if (!res.data.success) {\r\n    //         console.log(\"Get list friends fail\");\r\n    //       } else {\r\n    //         setListFriends(res.data.friends);\r\n    //       }\r\n    //       return axios.get(`${TEMP_URL}/api/user/teachers`);\r\n    //     })\r\n    //     .then(async (res) => {\r\n    //       if (!res.data.success) {\r\n    //         console.log(\"Get list teachers fail\");\r\n    //       } else {\r\n    //         setListTeachers(res.data.teachers);\r\n    //       }\r\n    //       return axios.post(\r\n    //         `${URL_MAIN}/api/group/conversation/getconvs`,\r\n    //         {\r\n    //           userId: userId,\r\n    //         },\r\n    //         {\r\n    //           header: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //           },\r\n    //         }\r\n    //       );\r\n    //     })\r\n    //     .then(async (res) => {\r\n    //       if (!res.data.success) {\r\n    //         console.log(\"Get list groups fail\");\r\n    //       } else {\r\n    //         // console.log(res.data.GroupConversations);\r\n    //         setListGroups(res.data.GroupConversations);\r\n    //       }\r\n    //     })\r\n    //     .catch((err) => console.log(err.message));\r\n    //   listGroups.map((groupId) => {\r\n    //     axios\r\n    //       .post(\r\n    //         `${TEMP_URL}/api/group/conversation/get`,\r\n    //         {\r\n    //           conversationId: groupId,\r\n    //         },\r\n    //         {\r\n    //           header: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //           },\r\n    //         }\r\n    //       )\r\n    //       .then((res) => {\r\n    //         setGroupsData((prevData) => [...prevData, res.data.conversation]);\r\n    //         console.log(groupsData);\r\n    //       })\r\n    //       .catch((err) => {\r\n    //         console.log(err);\r\n    //       });\r\n    //   });\r\n    // } catch (err) {\r\n    //   console.log(err.message);\r\n    // }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MainLayout />\r\n      <div className=\"Messenger\">\r\n        <div className=\"MessengerContainer\">\r\n          {/* friend list */}\r\n\r\n          <ContactSideBar\r\n            listFriends={listFriends}\r\n            listTeachers={listTeachers}\r\n            groupsData={groupsData}\r\n          />\r\n\r\n          {/* chatbox */}\r\n\r\n          <ChatBoxContainer />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
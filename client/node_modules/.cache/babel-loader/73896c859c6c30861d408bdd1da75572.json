{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\MainPage\\\\Main.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-no-comment-textnodes */\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport { useState, useEffect, Component } from \"react\";\nimport Login from '../LoginPage/Login';\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\nimport \"./Main.css\";\nimport MainLayout from '../../component/MainPage/MainLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [LoginData, setLoginData] = useState(localStorage.getItem(\"loginData\") ? JSON.parse(localStorage.getItem(\"loginData\")) : null);\n  const navigate = useNavigate(); // if not logindata changeroute to login page\n\n  useEffect(() => {\n    if (!LoginData) {\n      navigate(\"/login\");\n    }\n  }, [LoginData, navigate]); // eslint-disable-next-line no-unused-vars\n\n  const handleLogout = () => {\n    delete_cookie(\"accessToken\"); ///remove login data in local storage\n\n    localStorage.removeItem(\"loginData\");\n\n    if (LoginData) {\n      setLoginData(null);\n    }\n\n    navigate(\"/login\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: LoginData ? /*#__PURE__*/_jsxDEV(MainLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 28\n      }, this) || /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"you need login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 73\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"NQRhcrqmm5kNQvO9ZD+38WhyDyE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/MainPage/Main.js"],"names":["React","BrowserRouter","Router","Routes","Route","Link","useNavigate","useState","useEffect","Component","Login","bake_cookie","read_cookie","delete_cookie","MainLayout","Main","LoginData","setLoginData","localStorage","getItem","JSON","parse","navigate","handleLogout","removeItem"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,EAAuDC,WAAvD,QAA0E,kBAA1E;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,aAAnC,QAAwD,WAAxD;AACA,OAAO,YAAP;AAEA,OAAOC,UAAP,MAAuB,qCAAvB;;;;AAGA,MAAMC,IAAI,GAAG,MAAI;AAAA;;AAGb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CACtCW,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,IAD9C,CAA1C;AAIA,QAAMG,QAAQ,GAAIhB,WAAW,EAA7B,CAPa,CASb;;AACAE,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAI,CAACQ,SAAL,EAAe;AACfM,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACA,GAJQ,EAIP,CAACN,SAAD,EAAYM,QAAZ,CAJO,CAAT,CAVa,CAkBX;;AACF,QAAMC,YAAY,GAAG,MAAM;AACvBV,IAAAA,aAAa,CAAC,aAAD,CAAb,CADuB,CAEvB;;AACAK,IAAAA,YAAY,CAACM,UAAb,CAAwB,WAAxB;;AAEF,QAAGR,SAAH,EAAa;AACXC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AACCK,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,GATH;;AAWE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,gBAIIN,SAAS,GAAG,aAAC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAAD,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtB,gBAA+C;AAAA,+BAAE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF;AAJ5D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaL,CA3CD;;GAAMD,I;UAOgBT,W;;;KAPhBS,I;AA6CN,eAAeA,IAAf","sourcesContent":["/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React from 'react'\r\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom'\r\nimport { useState, useEffect ,Component} from \"react\"\r\nimport Login from '../LoginPage/Login';\r\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\r\nimport \"./Main.css\"\r\n\r\nimport MainLayout from '../../component/MainPage/MainLayout';\r\n\r\n\r\nconst Main = ()=>{\r\n\r\n    \r\n    const [LoginData, setLoginData] = useState(\r\n        localStorage.getItem(\"loginData\") ? JSON.parse(localStorage.getItem(\"loginData\")) : null\r\n      )\r\n    \r\n    const navigate =  useNavigate() \r\n\r\n    // if not logindata changeroute to login page\r\n    useEffect(()=>{ \r\n      if (!LoginData){\r\n      navigate(\"/login\")\r\n    }\r\n    },[LoginData, navigate])\r\n   \r\n\r\n\r\n      // eslint-disable-next-line no-unused-vars\r\n    const handleLogout = () => {\r\n        delete_cookie(\"accessToken\")\r\n        ///remove login data in local storage\r\n        localStorage.removeItem(\"loginData\")\r\n    \r\n      if(LoginData){\r\n        setLoginData(null)\r\n      }\r\n        navigate(\"/login\")\r\n      }\r\n  \r\n      return (\r\n        <div className=\"Main\">\r\n          <header className=\"App-header\">\r\n            \r\n            \r\n          {\r\n              LoginData ? (<MainLayout/>) || <div>loading...</div> : (<><Link to={\"/login\"}>you need login</Link></>)     \r\n          }\r\n            \r\n    \r\n          </header>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Main"]},"metadata":{},"sourceType":"module"}
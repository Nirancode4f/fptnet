{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\component\\\\Profile\\\\PostPopup\\\\CmtPost\\\\CmtBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport CmtUser from './CmtUser';\nimport ReactDOM from 'react-dom';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\nconst error = \"https://upload.wikimedia.org/wikipedia/commons/c/c7/No_Pic.jpg\";\n\nfunction CmtBox(props) {\n  _s();\n\n  const {\n    postData\n  } = props;\n  const [Block, setBlock] = useState(1);\n  const [isunmound, setisunmound] = useState(true);\n  const [Usercmt, setUsercmt] = useState([]);\n  const {\n    Cmt\n  } = props;\n\n  const Getaxios = () => {\n    try {\n      axios.post(`${URL_MAIN}/api/comment/get`, {\n        \"postId\": `${postData._id}`,\n        \"block\": Block,\n        \"sorttype\": 1\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        // after unmount component but asynchronous task still run, drop it.\n        if (isunmound) {\n          const newUsercmt = [...Usercmt];\n          newUsercmt.push(res.data.comments);\n          let sumUsercmt = newUsercmt.concat(res.data.comments);\n          setUsercmt(newUsercmt[0]);\n        }\n      }).catch(err => {\n        console.log(err.message);\n      });\n    } catch (error) {\n      // console log error\n      console.log(error);\n    }\n  };\n\n  const Getaxios2 = () => {\n    try {\n      axios.post(`${URL_MAIN}/api/comment/get`, {\n        \"postId\": `${postData._id}`,\n        \"block\": 2,\n        \"sorttype\": 1\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        // after unmount component but asynchronous task still run, drop it.\n        if (isunmound) {\n          const newUsercmt = [...Usercmt]; // newUsercmt.push(res.data.comments)\n\n          let sumUsercmt = newUsercmt.concat(res.data.comments);\n          setUsercmt(sumUsercmt);\n          console.log(`newusercmt = `, sumUsercmt);\n        }\n      }).catch(err => {\n        console.log(err.message);\n      });\n    } catch (error) {\n      // console log error\n      console.log(error);\n    }\n  };\n\n  console.log(`userdata`, Usercmt); // run this shit first\n\n  useEffect(() => {\n    // run first\n    // check if component is mounte\n    Getaxios();\n    return () => {\n      setisunmound(false);\n    };\n  }, []);\n  useEffect(() => {\n    var e = Usercmt.map(cmt => /*#__PURE__*/_jsxDEV(CmtUser, {\n      CmtInfor: cmt\n    }, cmt._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this));\n    ReactDOM.render(e, document.getElementById(\"cmt_ele\"));\n  });\n\n  const handleScrollCmt = e => {\n    Getaxios2();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-wiew-detail-post-content-comment-content\",\n        id: \"cmt_ele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleScrollCmt,\n        children: \"click for more...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CmtBox, \"ISiqyTcIhjSPBpPquO4iu0x3mVQ=\");\n\n_c = CmtBox;\nexport default CmtBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CmtBox\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/component/Profile/PostPopup/CmtPost/CmtBox.jsx"],"names":["React","useState","useEffect","CmtUser","ReactDOM","axios","URL_MAIN","process","env","REACT_APP_URL_MAIN","error","CmtBox","props","postData","Block","setBlock","isunmound","setisunmound","Usercmt","setUsercmt","Cmt","Getaxios","post","_id","headers","then","res","newUsercmt","push","data","comments","sumUsercmt","concat","catch","err","console","log","message","Getaxios2","e","map","cmt","render","document","getElementById","handleScrollCmt"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport CmtUser from './CmtUser';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport axios from \"axios\";\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\r\n\r\nconst error =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/c/c7/No_Pic.jpg\";\r\n\r\nfunction CmtBox(props) {\r\n\r\n\r\n  const { postData } = props\r\n  const [Block, setBlock] = useState(1)\r\n  const [isunmound, setisunmound] = useState(true)\r\n  const [Usercmt, setUsercmt] = useState([])\r\n  const { Cmt } = props\r\n\r\n\r\n\r\n\r\n    const Getaxios = ()=>{\r\n      try {\r\n        axios\r\n          .post(\r\n            `${URL_MAIN}/api/comment/get`,\r\n            {\r\n              \"postId\": `${postData._id}`,\r\n              \"block\": Block,\r\n              \"sorttype\": 1\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n  \r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            // after unmount component but asynchronous task still run, drop it.\r\n            if (isunmound) {\r\n          const newUsercmt = [...Usercmt]\r\n\r\n              newUsercmt.push(res.data.comments)\r\n              let sumUsercmt = newUsercmt.concat(res.data.comments)\r\n              setUsercmt(newUsercmt[0])\r\n        \r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.message);\r\n          });\r\n      } catch (error) {\r\n        // console log error\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\nconst Getaxios2 = ()=>{\r\n      try {\r\n        axios\r\n          .post(\r\n            `${URL_MAIN}/api/comment/get`,\r\n            {\r\n              \"postId\": `${postData._id}`,\r\n              \"block\": 2,\r\n              \"sorttype\": 1\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n  \r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            // after unmount component but asynchronous task still run, drop it.\r\n            if (isunmound) {\r\n          \r\n              \r\n              const newUsercmt = [...Usercmt]\r\n\r\n              // newUsercmt.push(res.data.comments)\r\n\r\n             let sumUsercmt = newUsercmt.concat(res.data.comments)\r\n\r\n              setUsercmt(sumUsercmt)\r\n              console.log(`newusercmt = `,sumUsercmt)\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.message);\r\n          });\r\n      } catch (error) {\r\n        // console log error\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\nconsole.log(`userdata`, Usercmt)\r\n\r\n\r\n  \r\n\r\n  // run this shit first\r\n  useEffect(() => {\r\n    // run first\r\n    // check if component is mounte\r\n    Getaxios()\r\n\r\n    return ()=>{\r\n      setisunmound(false)\r\n    }\r\n\r\n  },[]);\r\n\r\n\r\n  useEffect(() => {\r\n \r\n    var e = Usercmt.map((cmt) =>\r\n        <CmtUser key={cmt._id}  CmtInfor={cmt} />\r\n      )\r\n      ReactDOM.render(e, document.getElementById(\"cmt_ele\"))\r\n    \r\n  \r\n  })\r\n\r\n\r\n      \r\n  const handleScrollCmt = (e)=>{\r\n    \r\n    Getaxios2()\r\n  \r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <div\r\n        className=\"comment-main\" >\r\n        <div className=\"modal-wiew-detail-post-content-comment-content\" id='cmt_ele'  >\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n        <div onClick={handleScrollCmt}>click for more...</div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CmtBox;"]},"metadata":{},"sourceType":"module"}
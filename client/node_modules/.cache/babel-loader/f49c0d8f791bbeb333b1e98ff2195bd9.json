{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\Messenger\\\\childComponents\\\\ChatBoxComps\\\\ChatBox.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport ChatBoxMain from \"./ChatBoxMain\";\nimport ChatBoxMessage from \"./ChatBoxMessage\";\nimport ChatBoxMessageOwnerUser from \"./ChatBoxMessageOwnerUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || `https://fanserverapi.herokuapp.com`;\nexport default function ChatBox(_ref) {\n  _s();\n\n  let {\n    messageInfo\n  } = _ref;\n  const [totalMessages, setTotalMessages] = useState(0);\n  const [messages, setMessages] = useState([]);\n  const [blocks, setBlocks] = useState(0); // const [targetId, setTargetId] = useState(\"\");\n\n  const userId = JSON.parse(localStorage.getItem(\"loginData\")).user._id;\n\n  const calBlocks = totalMess => {\n    return (totalMess - totalMess % 20) / 20 + !!(totalMess % 20);\n  }; // get conversation id\n\n\n  const getConvsId = async (uId, tId) => {\n    let result;\n\n    try {\n      result = await axios.post(`${URL_MAIN}/api/conversation/getfriendconv`, {\n        userId: uId,\n        friendId: tId\n      });\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    return result;\n  }; // get block message\n\n\n  const getConvsMessages = async (uId, tId, blocksIndex) => {\n    let result;\n\n    try {\n      result = await axios.post(`${URL_MAIN}/api/message/get`, {\n        userId: uId,\n        conversationId: tId,\n        block: blocksIndex\n      });\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    return result;\n  };\n\n  useEffect(() => {\n    // setTargetId(messageInfo.id);\n    const targetId = messageInfo.id;\n    getConvsId(userId, targetId).then(res => {\n      console.log(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatBox\",\n      children: /*#__PURE__*/_jsxDEV(ChatBoxMain, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ChatBox, \"e1U8BWp/YADtlK2y07xdLiyzF/g=\");\n\n_c = ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/Messenger/childComponents/ChatBoxComps/ChatBox.jsx"],"names":["axios","React","useEffect","useState","ChatBoxMain","ChatBoxMessage","ChatBoxMessageOwnerUser","URL_MAIN","process","env","REACT_APP_URL_MAIN","ChatBox","messageInfo","totalMessages","setTotalMessages","messages","setMessages","blocks","setBlocks","userId","JSON","parse","localStorage","getItem","user","_id","calBlocks","totalMess","getConvsId","uId","tId","result","post","friendId","err","console","log","message","getConvsMessages","blocksIndex","conversationId","block","targetId","id","then","res","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;;AAEA,MAAMC,QAAQ,GACZC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAmC,oCADrC;AAGA,eAAe,SAASC,OAAT,OAAkC;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,CAAD,CAApC,CAH+C,CAI/C;;AACA,QAAMgB,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,EAA8CC,IAA9C,CAAmDC,GAAlE;;AACA,QAAMC,SAAS,GAAIC,SAAD,IAAe;AAC/B,WAAO,CAACA,SAAS,GAAIA,SAAS,GAAG,EAA1B,IAAiC,EAAjC,GAAsC,CAAC,EAAEA,SAAS,GAAG,EAAd,CAA9C;AACD,GAFD,CAN+C,CAU/C;;;AACA,QAAMC,UAAU,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrC,QAAIC,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAG,MAAM/B,KAAK,CAACgC,IAAN,CAAY,GAAEzB,QAAS,iCAAvB,EAAyD;AACtEY,QAAAA,MAAM,EAAEU,GAD8D;AAEtEI,QAAAA,QAAQ,EAAEH;AAF4D,OAAzD,CAAf;AAID,KALD,CAKE,OAAOI,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD;;AACD,WAAON,MAAP;AACD,GAXD,CAX+C,CAuB/C;;;AACA,QAAMO,gBAAgB,GAAG,OAAOT,GAAP,EAAYC,GAAZ,EAAiBS,WAAjB,KAAiC;AACxD,QAAIR,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAG,MAAM/B,KAAK,CAACgC,IAAN,CAAY,GAAEzB,QAAS,kBAAvB,EAA0C;AACvDY,QAAAA,MAAM,EAAEU,GAD+C;AAEvDW,QAAAA,cAAc,EAAEV,GAFuC;AAGvDW,QAAAA,KAAK,EAAEF;AAHgD,OAA1C,CAAf;AAKD,KAND,CAME,OAAOL,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD;;AACD,WAAON,MAAP;AACD,GAZD;;AAcA7B,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMwC,QAAQ,GAAG9B,WAAW,CAAC+B,EAA7B;AAEAf,IAAAA,UAAU,CAACT,MAAD,EAASuB,QAAT,CAAV,CAA6BE,IAA7B,CAAmCC,GAAD,IAAS;AACzCV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,IAAhB;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;GAtDuBnC,O;;KAAAA,O","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ChatBoxMain from \"./ChatBoxMain\";\r\nimport ChatBoxMessage from \"./ChatBoxMessage\";\r\nimport ChatBoxMessageOwnerUser from \"./ChatBoxMessageOwnerUser\";\r\n\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || `https://fanserverapi.herokuapp.com`;\r\n\r\nexport default function ChatBox({ messageInfo }) {\r\n  const [totalMessages, setTotalMessages] = useState(0);\r\n  const [messages, setMessages] = useState([]);\r\n  const [blocks, setBlocks] = useState(0);\r\n  // const [targetId, setTargetId] = useState(\"\");\r\n  const userId = JSON.parse(localStorage.getItem(\"loginData\")).user._id;\r\n  const calBlocks = (totalMess) => {\r\n    return (totalMess - (totalMess % 20)) / 20 + !!(totalMess % 20);\r\n  };\r\n\r\n  // get conversation id\r\n  const getConvsId = async (uId, tId) => {\r\n    let result;\r\n    try {\r\n      result = await axios.post(`${URL_MAIN}/api/conversation/getfriendconv`, {\r\n        userId: uId,\r\n        friendId: tId,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n    return result;\r\n  };\r\n  // get block message\r\n  const getConvsMessages = async (uId, tId, blocksIndex) => {\r\n    let result;\r\n    try {\r\n      result = await axios.post(`${URL_MAIN}/api/message/get`, {\r\n        userId: uId,\r\n        conversationId: tId,\r\n        block: blocksIndex,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // setTargetId(messageInfo.id);\r\n    const targetId = messageInfo.id;\r\n\r\n    getConvsId(userId, targetId).then((res) => {\r\n      console.log(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ChatBox\">\r\n        <ChatBoxMain />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
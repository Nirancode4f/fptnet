{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\Messenger\\\\childComponents\\\\ChatBoxComps\\\\ChatBoxContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ChatBox from \"./ChatBox\";\nimport ChatBoxFooter from \"./ChatBoxFooter\";\nimport ChatBoxHeader from \"./ChatBoxHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatBoxContainer(props) {\n  _s();\n\n  const {\n    currentItem,\n    userId\n  } = props;\n  const [message, setMessage] = useState({});\n  const [currentConvsId, setCurrentConvsId] = useState(\"\");\n\n  const handlePostMessage = (e, data) => {\n    if (e.key === \"Enter\") {// send data to server\n    }\n  };\n\n  const handleConvsIdChange = convsId => {\n    setCurrentConvsId(convsId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChatBoxHeader, {\n      headerData: {\n        avatar: currentItem.avatar,\n        name: currentItem.name\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      chatData: {\n        targetId: currentItem.id,\n        convs_type: currentItem.contact_type,\n        targetAvt: currentItem.avatar\n      },\n      onCurrentConvsIdChange: handleConvsIdChange,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBoxFooter, {\n      handleEvent: handlePostMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatBoxContainer, \"YpmV5oi3n7nHntUkWm0MTH846SA=\");\n\n_c = ChatBoxContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBoxContainer\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/Messenger/childComponents/ChatBoxComps/ChatBoxContainer.jsx"],"names":["React","useEffect","useState","ChatBox","ChatBoxFooter","ChatBoxHeader","ChatBoxContainer","props","currentItem","userId","message","setMessage","currentConvsId","setCurrentConvsId","handlePostMessage","e","data","key","handleConvsIdChange","convsId","avatar","name","targetId","id","convs_type","contact_type","targetAvt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA0BF,KAAhC;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMY,iBAAiB,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AACrC,QAAID,CAAC,CAACE,GAAF,KAAU,OAAd,EAAuB,CACrB;AACD;AACF,GAJD;;AAMA,QAAMC,mBAAmB,GAAIC,OAAD,IAAa;AACvCN,IAAAA,iBAAiB,CAACM,OAAD,CAAjB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,UAAU,EAAE;AAAEC,QAAAA,MAAM,EAAEZ,WAAW,CAACY,MAAtB;AAA8BC,QAAAA,IAAI,EAAEb,WAAW,CAACa;AAAhD;AADd;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AACE,MAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAEd,WAAW,CAACe,EADd;AAERC,QAAAA,UAAU,EAAEhB,WAAW,CAACiB,YAFhB;AAGRC,QAAAA,SAAS,EAAElB,WAAW,CAACY;AAHf,OADZ;AAME,MAAA,sBAAsB,EAAEF,mBAN1B;AAOE,MAAA,MAAM,EAAET;AAPV;AAAA;AAAA;AAAA;AAAA,YAJF,eAaE,QAAC,aAAD;AAAe,MAAA,WAAW,EAAEK;AAA5B;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAiBD;;GAjCuBR,gB;;KAAAA,gB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport ChatBox from \"./ChatBox\";\r\nimport ChatBoxFooter from \"./ChatBoxFooter\";\r\nimport ChatBoxHeader from \"./ChatBoxHeader\";\r\n\r\nexport default function ChatBoxContainer(props) {\r\n  const { currentItem, userId } = props;\r\n\r\n  const [message, setMessage] = useState({});\r\n  const [currentConvsId, setCurrentConvsId] = useState(\"\");\r\n\r\n  const handlePostMessage = (e, data) => {\r\n    if (e.key === \"Enter\") {\r\n      // send data to server\r\n    }\r\n  };\r\n\r\n  const handleConvsIdChange = (convsId) => {\r\n    setCurrentConvsId(convsId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ChatBoxHeader\r\n        headerData={{ avatar: currentItem.avatar, name: currentItem.name }}\r\n      />\r\n      <ChatBox\r\n        chatData={{\r\n          targetId: currentItem.id,\r\n          convs_type: currentItem.contact_type,\r\n          targetAvt: currentItem.avatar,\r\n        }}\r\n        onCurrentConvsIdChange={handleConvsIdChange}\r\n        userId={userId}\r\n      />\r\n      <ChatBoxFooter handleEvent={handlePostMessage} />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
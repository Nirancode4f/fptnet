{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\Messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport MainLayout from \"../../component/MainPage/MainLayout\";\nimport ChatBoxContainer from \"./childComponents/ChatBoxComps/ChatBoxContainer\";\nimport ContactSideBar from \"./childComponents/ContactSideBar\";\nimport \"./Messenger.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TEMP_URL = \"https://fanserverapi.herokuapp.com\" || \"http://localhost:3000\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\nexport default function Messenger() {\n  _s();\n\n  const [listFriends, setListFriends] = useState([]);\n  const [listTeachers, setListTeachers] = useState([]);\n  const [listGroups, setListGroups] = useState([]);\n  const [currentConvs, setCurrentConvs] = useState({});\n\n  const userId = JSON.parse(localStorage.getItem(\"loginData\")).user._id; // get data from list contacts\n\n\n  const handleGetConvs = (e, contactInfo) => {\n    e.stopPropagation();\n    setCurrentConvs(contactInfo);\n    console.log(\"ðŸš€ ~ file: Messenger.jsx ~ line 26 ~ handleGetConvs ~ contactInfo\", currentConvs);\n  }; // get friend list\n\n\n  const getListFriends = async userId => {\n    let result;\n\n    try {\n      result = await axios.post(`${TEMP_URL}/api/friend/get`, {\n        userId: userId\n      }, {\n        header: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    return result;\n  }; // get list teacher\n\n\n  const getListTeachers = async userId => {\n    let result;\n\n    try {\n      result = await axios.get(`${TEMP_URL}/api/user/teachers`);\n    } catch (err) {\n      console.log(err);\n    }\n\n    return result.data.teachers;\n  }; //take list groups here\n\n\n  const getListGroups = async userId => {\n    let result;\n\n    try {\n      result = await axios.post(`${TEMP_URL}/api/group/conversation/getconvs`, {\n        userId: userId\n      }, {\n        header: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    return result;\n  }; //take data for the first times\n\n\n  useEffect(() => {\n    let isMounted = true; //run this to take the friend list\n\n    getListFriends(userId).then(res => {\n      // if component umount before we get api, drop it\n      if (isMounted) setListFriends(res.data.friends);\n    }).catch(err => console.log(err)); // run this to take teaccherlist\n\n    getListTeachers(userId).then(res => {\n      // if component umount before we get api, drop it\n      if (isMounted) setListTeachers(res);\n    }).catch(err => console.log(err)); // run this to take group list\n\n    getListGroups(userId).then(res => {\n      // if component umount before we get api, drop it\n      if (isMounted) {\n        var data = res.data.conversations;\n        setListGroups(data);\n      }\n    }).catch(err => console.log(err));\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Messenger\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MessengerContainer\",\n        children: [/*#__PURE__*/_jsxDEV(ContactSideBar, {\n          listFriends: listFriends,\n          listTeachers: listTeachers,\n          listGroups: listGroups,\n          OnClickContactBtn: handleGetConvs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatBoxContainer, {\n          contactInfo: {\n            id: \"61d1920a61501846a35e8366\",\n            name: \"nhan\",\n            avatarSrc: \"https://drive.google.com/uc?export=view&id=1JpmDp4CMvdvFlSYjJ5TP9sdrewYUuBIi\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"k0prAdYNyIPaKYJQlVE1RP0kyr8=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/Messenger/Messenger.jsx"],"names":["axios","React","useState","useEffect","MainLayout","ChatBoxContainer","ContactSideBar","TEMP_URL","URL_MAIN","process","env","REACT_APP_URL_MAIN","Messenger","listFriends","setListFriends","listTeachers","setListTeachers","listGroups","setListGroups","currentConvs","setCurrentConvs","userId","JSON","parse","localStorage","getItem","user","_id","handleGetConvs","e","contactInfo","stopPropagation","console","log","getListFriends","result","post","header","err","getListTeachers","get","data","teachers","getListGroups","isMounted","then","res","friends","catch","conversations","id","name","avatarSrc"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MainLayout from \"../../component/MainPage/MainLayout\";\r\nimport ChatBoxContainer from \"./childComponents/ChatBoxComps/ChatBoxContainer\";\r\nimport ContactSideBar from \"./childComponents/ContactSideBar\";\r\n\r\nimport \"./Messenger.css\";\r\n\r\nconst TEMP_URL =\r\n  \"https://fanserverapi.herokuapp.com\" || \"http://localhost:3000\";\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\r\n\r\nexport default function Messenger() {\r\n  const [listFriends, setListFriends] = useState([]);\r\n  const [listTeachers, setListTeachers] = useState([]);\r\n  const [listGroups, setListGroups] = useState([]);\r\n  const [currentConvs, setCurrentConvs] = useState({});\r\n  const userId = JSON.parse(localStorage.getItem(\"loginData\")).user._id;\r\n\r\n  // get data from list contacts\r\n  const handleGetConvs = (e, contactInfo) => {\r\n    e.stopPropagation();\r\n    setCurrentConvs(contactInfo);\r\n    console.log(\r\n      \"ðŸš€ ~ file: Messenger.jsx ~ line 26 ~ handleGetConvs ~ contactInfo\",\r\n      currentConvs\r\n    );\r\n  };\r\n\r\n  // get friend list\r\n  const getListFriends = async (userId) => {\r\n    let result;\r\n    try {\r\n      result = await axios.post(\r\n        `${TEMP_URL}/api/friend/get`,\r\n        {\r\n          userId: userId,\r\n        },\r\n        {\r\n          header: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // get list teacher\r\n  const getListTeachers = async (userId) => {\r\n    let result;\r\n    try {\r\n      result = await axios.get(`${TEMP_URL}/api/user/teachers`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    return result.data.teachers;\r\n  };\r\n\r\n  //take list groups here\r\n  const getListGroups = async (userId) => {\r\n    let result;\r\n    try {\r\n      result = await axios.post(\r\n        `${TEMP_URL}/api/group/conversation/getconvs`,\r\n        {\r\n          userId: userId,\r\n        },\r\n        {\r\n          header: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  //take data for the first times\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    //run this to take the friend list\r\n    getListFriends(userId)\r\n      .then((res) => {\r\n        // if component umount before we get api, drop it\r\n        if (isMounted) setListFriends(res.data.friends);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    // run this to take teaccherlist\r\n    getListTeachers(userId)\r\n      .then((res) => {\r\n        // if component umount before we get api, drop it\r\n        if (isMounted) setListTeachers(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    // run this to take group list\r\n    getListGroups(userId)\r\n      .then((res) => {\r\n        // if component umount before we get api, drop it\r\n        if (isMounted) {\r\n          var data = res.data.conversations;\r\n          setListGroups(data);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MainLayout />\r\n      <div className=\"Messenger\">\r\n        <div className=\"MessengerContainer\">\r\n          {/* friend list */}\r\n\r\n          <ContactSideBar\r\n            listFriends={listFriends}\r\n            listTeachers={listTeachers}\r\n            listGroups={listGroups}\r\n            OnClickContactBtn={handleGetConvs}\r\n          />\r\n\r\n          {/* chatbox */}\r\n\r\n          <ChatBoxContainer\r\n            contactInfo={{\r\n              id: \"61d1920a61501846a35e8366\",\r\n              name: \"nhan\",\r\n              avatarSrc:\r\n                \"https://drive.google.com/uc?export=view&id=1JpmDp4CMvdvFlSYjJ5TP9sdrewYUuBIi\",\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\component\\\\Profile\\\\PostPopup\\\\CmtPost\\\\SendBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport { useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\nexport const SendBox = props => {\n  _s();\n\n  const {\n    postId\n  } = props;\n  const [Localdata, setLocaldata] = useState({});\n  const [isUnmound, setisUnmound] = useState(true);\n  const [CommentText, setCommentText] = useState(\"\");\n\n  const handleSend = e => {\n    e.preventDefault();\n    var localData = JSON.parse(localStorage.getItem(\"loginData\"));\n    const userId = localData.user._id; // check if component is mounted\n\n    if (CommentText !== \"\") {\n      try {\n        axios.post(`${URL_MAIN}/api/comment/create`, {\n          \"userId\": `${userId}`,\n          \"postId\": \"61d40f8ed5c3e626d22e27d6\",\n          \"content\": `${CommentText}`\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(res => {\n          console.log(res.data);\n          setCommentText(\"\");\n        }).catch(err => {\n          console.log(err.message);\n        });\n      } catch (error) {\n        // console log error\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSend,\n    className: \"comment-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setCommentText(e.target.value),\n      placeholder: \"Input your comment here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSend,\n      style: {\n        color: \"#f36f21\"\n      },\n      endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {\n        style: {\n          color: \"#f36f21\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SendBox, \"R5MLMYkfNoejJtEsZU92Mb8Gj+4=\");\n\n_c = SendBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendBox\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/component/Profile/PostPopup/CmtPost/SendBox.jsx"],"names":["React","useState","Button","SendIcon","useEffect","axios","URL_MAIN","process","env","REACT_APP_URL_MAIN","SendBox","props","postId","Localdata","setLocaldata","isUnmound","setisUnmound","CommentText","setCommentText","handleSend","e","preventDefault","localData","JSON","parse","localStorage","getItem","userId","user","_id","post","headers","then","res","console","log","data","catch","err","message","error","target","value","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,QAAQ,GACZC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAkC,oCADpC;AAOA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAACC,IAAAA;AAAD,MAAWD,KAAjB;AAEA,QAAM,CAACE,SAAD,EAAWC,YAAX,IAA2Bb,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;;AAOA,QAAMkB,UAAU,GAAIC,CAAD,IAAK;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAhB;AAEA,UAAMC,MAAM,GAAGL,SAAS,CAACM,IAAV,CAAeC,GAA9B,CAJwB,CAKxB;;AACA,QAAIZ,WAAW,KAAK,EAApB,EACA;AAAC,UAAI;AACDZ,QAAAA,KAAK,CACJyB,IADD,CAEK,GAAExB,QAAS,qBAFhB,EAGI;AACA,oBAAW,GAAEqB,MAAO,EADpB;AAEA,oBAAU,0BAFV;AAGA,qBAAY,GAAEV,WAAY;AAH1B,SAHJ,EAQI;AACAc,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AADT,SARJ,EAcCC,IAdD,CAcOC,GAAD,IAAS;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAlB,UAAAA,cAAc,CAAC,EAAD,CAAd;AAEH,SAlBD,EAmBCmB,KAnBD,CAmBQC,GAAD,IAAS;AACZJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,OAAhB;AACH,SArBD;AAsBH,OAvBA,CAuBC,OAAOC,KAAP,EAAc;AACZ;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AAAC;AACD,GAlCD;;AAwCA,sBACI;AAAM,IAAA,QAAQ,EAAErB,UAAhB;AAA4B,IAAA,SAAS,EAAC,cAAtC;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGC,CAAD,IAAKF,cAAc,CAACE,CAAC,CAACqB,MAAF,CAASC,KAAV,CAAhD;AAAkE,MAAA,WAAW,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AACA,MAAA,OAAO,EAAEvB,UADT;AAEA,MAAA,KAAK,EAAE;AAAEwB,QAAAA,KAAK,EAAE;AAAT,OAFP;AAGA,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT;AAAjB;AAAA;AAAA;AAAA;AAAA;AAHT;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA7DM;;GAAMjC,O;;KAAAA,O","sourcesContent":["import React, { useState } from 'react'\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useEffect } from 'react';\r\nimport axios from \"axios\";\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\r\n\r\n\r\n\r\n\r\n\r\nexport const SendBox = (props) => {\r\n    const {postId} = props\r\n\r\n    const [Localdata,setLocaldata] = useState({})\r\n    const [isUnmound, setisUnmound] = useState(true)\r\n    const [CommentText, setCommentText] = useState(\"\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSend = (e)=>{\r\n    e.preventDefault()\r\n    var localData = JSON.parse(localStorage.getItem(\"loginData\"));\r\n\r\n    const userId = localData.user._id\r\n    // check if component is mounted\r\n    if (CommentText !== \"\")\r\n    {try {\r\n        axios\r\n        .post(\r\n            `${URL_MAIN}/api/comment/create`,\r\n            {\r\n            \"userId\": `${userId}`,\r\n            \"postId\": \"61d40f8ed5c3e626d22e27d6\",\r\n            \"content\": `${CommentText}`\r\n            },\r\n            {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            }\r\n        )\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            setCommentText(\"\")\r\n            \r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n    } catch (error) {\r\n        // console log error\r\n        console.log(error);\r\n    }}\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSend} className=\"comment-post\">\r\n            <input type=\"text\" onChange={(e)=>setCommentText(e.target.value)} placeholder=\"Input your comment here\" />\r\n            <Button\r\n            onClick={handleSend}\r\n            style={{ color: \"#f36f21\" }}\r\n            endIcon={<SendIcon style={{ color: \"#f36f21\" }} />}></Button>\r\n        </form>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
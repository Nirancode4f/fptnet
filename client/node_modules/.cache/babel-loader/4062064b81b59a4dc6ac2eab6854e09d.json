{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\Messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport MainLayout from \"../../component/MainPage/MainLayout\";\nimport ChatBoxContainer from \"./childComponents/ChatBoxComps/ChatBoxContainer\";\nimport ContactSideBar from \"./childComponents/ContactSideBar\";\nimport \"./Messenger.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TEMP_URL = \"http://localhost:3000\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\nexport default function Messenger() {\n  _s();\n\n  const [listFriends, setListFriends] = useState([]);\n  const [listTeachers, setListTeachers] = useState([]);\n  const [listGroups, setListGroups] = useState([]);\n  const [groupsData, setGroupsData] = useState([]);\n\n  const userId = JSON.parse(localStorage.getItem(\"loginData\")).user._id;\n\n  const getListGConvs = async listGroups => {\n    let result = [];\n\n    for (let i = 0; i < listGroups.length; i++) {\n      const groupId = listGroups[i];\n      axios.post(`${URL_MAIN}/api/group/conversation/get`, {\n        conversationId: groupId\n      }).then(res => {\n        setGroupsData([...groupsData, res.data.conversation]);\n        console.log(\"ðŸš€ ~ file: Messenger.jsx ~ line 29 ~ getListGConvs ~ res.data.conversation\", res.data.conversation);\n      }).catch(err => console.log(err.message));\n    }\n  };\n\n  const getListFriends = async userId => {\n    let result;\n\n    try {\n      result = await axios.post(`${URL_MAIN}/api/friend/get`, {\n        userId: userId\n      });\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    return result;\n  };\n\n  const getListTeachers = async userId => {\n    let result;\n\n    try {\n      result = await axios.get(`${URL_MAIN}/api/user/teachers`);\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    return result.data.teachers;\n  };\n\n  const getListGroups = async userId => {\n    let result;\n\n    try {\n      result = await axios.post(`${URL_MAIN}/api/group/conversation/getconvs`, {\n        userId: userId\n      });\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    return result;\n  };\n\n  useEffect(() => {\n    getListFriends(userId).then(res => {\n      setListFriends(res.data.friends);\n      console.log(\"ðŸš€ ~ file: Messenger.jsx ~ line 75 ~ .then ~ res.data.friends\", res.data.friends);\n    }).catch(err => console.log(err));\n    getListTeachers(userId).then(res => {\n      setListTeachers(res);\n    }).catch(err => console.log(err));\n    getListGroups(userId).then(res => {\n      setListGroups(res.data.GroupConversations);\n    }).catch(err => console.log(err)); // let LGs = listGroups.map(async (groupId) => {\n    //   let result;\n    //   console.log(\"reun\");\n    //   try {\n    //     result = await axios.post(`${URL_MAIN}/api/group/conversation/get`, {\n    //       conversationId: groupId,\n    //     });\n    //   } catch (err) {\n    //     console.log(err);\n    //   }\n    //   return result;\n    // });\n    // Promise.all(LGs).then((values) => {\n    //   setGroupsData(values);\n    //   console.log(\n    //     \"ðŸš€ ~ file: Messenger.jsx ~ line 112 ~ Promise.all ~ values\",\n    //     values\n    //   );\n    // });\n\n    for (let i = 0; i < listGroups.length; i++) {\n      const groupId = listGroups[i];\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Messenger\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MessengerContainer\",\n        children: [/*#__PURE__*/_jsxDEV(ContactSideBar, {\n          listFriends: listFriends,\n          listTeachers: listTeachers,\n          groupsData: groupsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatBoxContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"25MozpSkHI7vmHMgOZY9LO/I6dE=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/Messenger/Messenger.jsx"],"names":["axios","React","useState","useEffect","MainLayout","ChatBoxContainer","ContactSideBar","TEMP_URL","URL_MAIN","process","env","REACT_APP_URL_MAIN","Messenger","listFriends","setListFriends","listTeachers","setListTeachers","listGroups","setListGroups","groupsData","setGroupsData","userId","JSON","parse","localStorage","getItem","user","_id","getListGConvs","result","i","length","groupId","post","conversationId","then","res","data","conversation","console","log","catch","err","message","getListFriends","getListTeachers","get","teachers","getListGroups","friends","GroupConversations"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MainLayout from \"../../component/MainPage/MainLayout\";\r\nimport ChatBoxContainer from \"./childComponents/ChatBoxComps/ChatBoxContainer\";\r\nimport ContactSideBar from \"./childComponents/ContactSideBar\";\r\n\r\nimport \"./Messenger.css\";\r\n\r\nconst TEMP_URL = \"http://localhost:3000\";\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\r\n\r\nexport default function Messenger() {\r\n  const [listFriends, setListFriends] = useState([]);\r\n  const [listTeachers, setListTeachers] = useState([]);\r\n  const [listGroups, setListGroups] = useState([]);\r\n  const [groupsData, setGroupsData] = useState([]);\r\n  const userId = JSON.parse(localStorage.getItem(\"loginData\")).user._id;\r\n\r\n  const getListGConvs = async (listGroups) => {\r\n    let result = [];\r\n    for (let i = 0; i < listGroups.length; i++) {\r\n      const groupId = listGroups[i];\r\n      axios\r\n        .post(`${URL_MAIN}/api/group/conversation/get`, {\r\n          conversationId: groupId,\r\n        })\r\n        .then((res) => {\r\n          setGroupsData([...groupsData, res.data.conversation]);\r\n          console.log(\r\n            \"ðŸš€ ~ file: Messenger.jsx ~ line 29 ~ getListGConvs ~ res.data.conversation\",\r\n            res.data.conversation\r\n          );\r\n        })\r\n        .catch((err) => console.log(err.message));\r\n    }\r\n  };\r\n\r\n  const getListFriends = async (userId) => {\r\n    let result;\r\n    try {\r\n      result = await axios.post(`${URL_MAIN}/api/friend/get`, {\r\n        userId: userId,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getListTeachers = async (userId) => {\r\n    let result;\r\n    try {\r\n      result = await axios.get(`${URL_MAIN}/api/user/teachers`);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n    return result.data.teachers;\r\n  };\r\n\r\n  const getListGroups = async (userId) => {\r\n    let result;\r\n    try {\r\n      result = await axios.post(`${URL_MAIN}/api/group/conversation/getconvs`, {\r\n        userId: userId,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListFriends(userId)\r\n      .then((res) => {\r\n        setListFriends(res.data.friends);\r\n        console.log(\r\n          \"ðŸš€ ~ file: Messenger.jsx ~ line 75 ~ .then ~ res.data.friends\",\r\n          res.data.friends\r\n        );\r\n      })\r\n      .catch((err) => console.log(err));\r\n    getListTeachers(userId)\r\n      .then((res) => {\r\n        setListTeachers(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    getListGroups(userId)\r\n      .then((res) => {\r\n        setListGroups(res.data.GroupConversations);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    // let LGs = listGroups.map(async (groupId) => {\r\n    //   let result;\r\n    //   console.log(\"reun\");\r\n    //   try {\r\n    //     result = await axios.post(`${URL_MAIN}/api/group/conversation/get`, {\r\n    //       conversationId: groupId,\r\n    //     });\r\n    //   } catch (err) {\r\n    //     console.log(err);\r\n    //   }\r\n    //   return result;\r\n    // });\r\n\r\n    // Promise.all(LGs).then((values) => {\r\n    //   setGroupsData(values);\r\n    //   console.log(\r\n    //     \"ðŸš€ ~ file: Messenger.jsx ~ line 112 ~ Promise.all ~ values\",\r\n    //     values\r\n    //   );\r\n    // });\r\n\r\n    for (let i = 0; i < listGroups.length; i++) {\r\n      const groupId = listGroups[i];\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MainLayout />\r\n      <div className=\"Messenger\">\r\n        <div className=\"MessengerContainer\">\r\n          {/* friend list */}\r\n\r\n          <ContactSideBar\r\n            listFriends={listFriends}\r\n            listTeachers={listTeachers}\r\n            groupsData={groupsData}\r\n          />\r\n\r\n          {/* chatbox */}\r\n\r\n          <ChatBoxContainer />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
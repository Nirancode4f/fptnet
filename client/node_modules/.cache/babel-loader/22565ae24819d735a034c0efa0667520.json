{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\LoginPage\\\\GgAuth.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport GoogleLogin from \"react-google-login\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\"; // eslint-disable-next-line no-unused-vars\n\nimport Cookies from \"universal-cookie\";\nimport { bake_cookie, read_cookie, delete_cookie } from \"sfcookies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL_MAIN = process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\n\nfunction GgAuth() {\n  _s();\n\n  // eslint-disable-next-line no-undef\n  const [LoginData, setLoginData] = useState(localStorage.getItem(\"loginData\") ? JSON.parse(localStorage.getItem(\"loginData\")) : null);\n  const navigate = useNavigate();\n\n  const handleFailure = result => {\n    navigate(\"/login\");\n  };\n\n  const hangdleLogin = async googleData => {\n    try {\n      axios.post(`${URL_MAIN}/api/auth/gg-login`, {\n        token: googleData.tokenId\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(res.data.message);\n        setLoginData(res.data.message);\n        localStorage.setItem(\"loginData\", JSON.stringify(res.data));\n        bake_cookie(\"accessToken\", res.data.accessToken);\n        navigate(\"/\");\n      }).catch(error => {\n        if (error.request) console.log(error.request);\n        if (error.respone) console.log(error.respone);\n      });\n    } catch (error) {\n      // console log error\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleLogin, {\n    clientId: \"368976437444-75mt0ttcg9i22emoapjf8ensoj6n18p3.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: renderProps.onClick,\n      className: \"gglogin_button\",\n      disabled: renderProps.disabled,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/2048px-Google_%22G%22_Logo.svg.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \\u0110\\u0103ng nh\\u1EADp v\\u1EDBi Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this),\n    buttonText: \"Login with google \",\n    onSuccess: hangdleLogin,\n    onFailure: handleFailure,\n    cookiePolicy: \"single_host_origin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GgAuth, \"X+mb5n5E5bEF6u84pAqCOHM+db8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GgAuth;\nexport default GgAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"GgAuth\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/LoginPage/GgAuth.js"],"names":["GoogleLogin","useState","useEffect","useNavigate","axios","Cookies","bake_cookie","read_cookie","delete_cookie","URL_MAIN","process","env","REACT_APP_URL_MAIN","GgAuth","LoginData","setLoginData","localStorage","getItem","JSON","parse","navigate","handleFailure","result","hangdleLogin","googleData","post","token","tokenId","headers","then","res","console","log","data","message","setItem","stringify","accessToken","catch","error","request","respone","renderProps","onClick","disabled"],"mappings":";;;AAAA;AAEA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,aAAnC,QAAwD,WAAxD;;AACA,MAAMC,QAAQ,GACZC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAkC,oCADpC;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CACxCe,YAAY,CAACC,OAAb,CAAqB,WAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADJ,GAEI,IAHoC,CAA1C;AAMA,QAAMG,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,QAAMkB,aAAa,GAAIC,MAAD,IAAY;AAChCF,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAG,MAAOC,UAAP,IAAsB;AACzC,QAAI;AACFpB,MAAAA,KAAK,CACFqB,IADH,CAEK,GAAEhB,QAAS,oBAFhB,EAGI;AACEiB,QAAAA,KAAK,EAAEF,UAAU,CAACG;AADpB,OAHJ,EAMI;AACEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADX,OANJ,EAYGC,IAZH,CAYSC,GAAD,IAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACAnB,QAAAA,YAAY,CAACe,GAAG,CAACG,IAAJ,CAASC,OAAV,CAAZ;AACAlB,QAAAA,YAAY,CAACmB,OAAb,CAAqB,WAArB,EAAkCjB,IAAI,CAACkB,SAAL,CAAeN,GAAG,CAACG,IAAnB,CAAlC;AAEA3B,QAAAA,WAAW,CAAC,aAAD,EAAgBwB,GAAG,CAACG,IAAJ,CAASI,WAAzB,CAAX;AACAjB,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,OAnBH,EAoBGkB,KApBH,CAoBUC,KAAD,IAAW;AAChB,YAAIA,KAAK,CAACC,OAAV,EAAmBT,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACC,OAAlB;AACnB,YAAID,KAAK,CAACE,OAAV,EAAmBV,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACE,OAAlB;AACpB,OAvBH;AAwBD,KAzBD,CAyBE,OAAOF,KAAP,EAAc;AACd;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD;AACF,GA9BD;;AAgCA,sBACE,QAAC,WAAD;AAEE,IAAA,QAAQ,EAAC,0EAFX;AAGE,IAAA,MAAM,EAAEG,WAAW,iBACjB;AAAQ,MAAA,OAAO,EAAEA,WAAW,CAACC,OAA7B;AAAsC,MAAA,SAAS,EAAC,gBAAhD;AAAiE,MAAA,QAAQ,EAAED,WAAW,CAACE,QAAvF;AAAA,8BACE;AAAK,QAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAUE,IAAA,UAAU,EAAC,oBAVb;AAWE,IAAA,SAAS,EAAErB,YAXb;AAYE,IAAA,SAAS,EAAEF,aAZb;AAaE,IAAA,YAAY,EAAE;AAbhB;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAhEQR,M;UASUV,W;;;KATVU,M;AAkET,eAAeA,MAAf","sourcesContent":["/* eslint-disable no-unused-vars */\r\n\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport Cookies from \"universal-cookie\";\r\nimport { bake_cookie, read_cookie, delete_cookie } from \"sfcookies\";\r\nconst URL_MAIN =\r\n  process.env.REACT_APP_URL_MAIN || \"https://fanserverapi.herokuapp.com\";\r\nfunction GgAuth() {\r\n  // eslint-disable-next-line no-undef\r\n\r\n  const [LoginData, setLoginData] = useState(\r\n    localStorage.getItem(\"loginData\")\r\n      ? JSON.parse(localStorage.getItem(\"loginData\"))\r\n      : null\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleFailure = (result) => {\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const hangdleLogin = async (googleData) => {\r\n    try {\r\n      axios\r\n        .post(\r\n          `${URL_MAIN}/api/auth/gg-login`,\r\n          {\r\n            token: googleData.tokenId,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data.message);\r\n          setLoginData(res.data.message);\r\n          localStorage.setItem(\"loginData\", JSON.stringify(res.data));\r\n\r\n          bake_cookie(\"accessToken\", res.data.accessToken);\r\n          navigate(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          if (error.request) console.log(error.request);\r\n          if (error.respone) console.log(error.respone);\r\n        });\r\n    } catch (error) {\r\n      // console log error\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GoogleLogin\r\n      \r\n      clientId=\"368976437444-75mt0ttcg9i22emoapjf8ensoj6n18p3.apps.googleusercontent.com\"\r\n      render={renderProps => (\r\n        <button onClick={renderProps.onClick} className=\"gglogin_button\" disabled={renderProps.disabled}>\r\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/2048px-Google_%22G%22_Logo.svg.png\"/>\r\n         \r\n          <span> Đăng nhập với Google</span>\r\n          </button>\r\n      )}\r\n      buttonText=\"Login with google \"\r\n      onSuccess={hangdleLogin}\r\n      onFailure={handleFailure}\r\n      cookiePolicy={\"single_host_origin\"}\r\n    />\r\n  );\r\n}\r\n\r\nexport default GgAuth;\r\n"]},"metadata":{},"sourceType":"module"}
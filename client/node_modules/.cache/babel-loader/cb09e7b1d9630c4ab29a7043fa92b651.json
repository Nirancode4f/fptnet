{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\WEB\\\\FPT_net\\\\fptnet\\\\client\\\\src\\\\page\\\\LoginPage\\\\GgAuth.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport GoogleLogin from \"react-google-login\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios'; // eslint-disable-next-line no-unused-vars\n\nimport Cookies from 'universal-cookie';\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GgAuth() {\n  _s();\n\n  // eslint-disable-next-line no-undef\n  const [LoginData, setLoginData] = useState(localStorage.getItem(\"loginData\") ? JSON.parse(localStorage.getItem(\"loginData\")) : null);\n  const navigate = useNavigate();\n\n  const handleFailure = result => {\n    alert(\"Cant take login data\");\n  };\n\n  const hangdleLogin = async googleData => {\n    try {\n      axios.post(\"https://fptnetwork.elemarkuspet.repl.co/api/auth/gg-login\", {\n        token: googleData.tokenId\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(res.data.message);\n        setLoginData(res.data.message);\n        localStorage.setItem(\"loginData\", JSON.stringify({\n          email: res.data.message.email,\n          name: res.data.message.name,\n          picture: res.data.message.picture\n        }));\n        bake_cookie(\"accessToken\", res.data.accessToken);\n        navigate(\"/\");\n      }).catch(error => {\n        if (error.request) console.log(error.request);\n        if (error.respone) console.log(error.respone);\n      });\n    } catch (error) {\n      // console log error\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleLogin, {\n    clientId: \"368976437444-75mt0ttcg9i22emoapjf8ensoj6n18p3.apps.googleusercontent.com\",\n    buttonText: \"Login with google \",\n    onSuccess: hangdleLogin,\n    onFailure: handleFailure,\n    cookiePolicy: \"single_host_origin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n}\n\n_s(GgAuth, \"PXdGXFRJSE4COjbgvOXAQZsKZV4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GgAuth;\nexport default GgAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"GgAuth\");","map":{"version":3,"sources":["D:/Code/WEB/FPT_net/fptnet/client/src/page/LoginPage/GgAuth.js"],"names":["GoogleLogin","useState","useEffect","useNavigate","axios","Cookies","bake_cookie","read_cookie","delete_cookie","GgAuth","LoginData","setLoginData","localStorage","getItem","JSON","parse","navigate","handleFailure","result","alert","hangdleLogin","googleData","post","token","tokenId","headers","then","res","console","log","data","message","setItem","stringify","email","name","picture","accessToken","catch","error","request","respone"],"mappings":";;;AAAA;AAEA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,aAAnC,QAAwD,WAAxD;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAEhB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CACxCW,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,IAD5C,CAA1C;AAIA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,aAAa,GAAIC,MAAD,IAAY;AAChCC,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,GAFD;;AAKA,QAAMC,YAAY,GAAG,MAAOC,UAAP,IAAsB;AAEzC,QAAI;AACFjB,MAAAA,KAAK,CAACkB,IAAN,CAAW,2DAAX,EAAwE;AACtEC,QAAAA,KAAK,EAAEF,UAAU,CAACG;AADoD,OAAxE,EAEG;AACDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADR,OAFH,EAMGC,IANH,CAMSC,GAAD,IAAS;AAGfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACApB,QAAAA,YAAY,CAACgB,GAAG,CAACG,IAAJ,CAASC,OAAV,CAAZ;AACAnB,QAAAA,YAAY,CAACoB,OAAb,CAAqB,WAArB,EAAkClB,IAAI,CAACmB,SAAL,CAAe;AAE/CC,UAAAA,KAAK,EAAEP,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBG,KAFuB;AAG/CC,UAAAA,IAAI,EAAER,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBI,IAHwB;AAI/CC,UAAAA,OAAO,EAAET,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBK;AAJqB,SAAf,CAAlC;AAOA9B,QAAAA,WAAW,CACT,aADS,EAETqB,GAAG,CAACG,IAAJ,CAASO,WAFA,CAAX;AAIArB,QAAAA,QAAQ,CAAC,GAAD,CAAR;AAED,OAxBD,EAwBGsB,KAxBH,CAwBSC,KAAK,IAAI;AAChB,YAAIA,KAAK,CAACC,OAAV,EAAmBZ,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACC,OAAlB;AACnB,YAAID,KAAK,CAACE,OAAV,EAAmBb,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACE,OAAlB;AACpB,OA3BD;AAgCD,KAjCD,CAiCE,OAAOF,KAAP,EAAc;AACd;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD;AACF,GAvCD;;AAyCA,sBAEI,QAAC,WAAD;AAEE,IAAA,QAAQ,EAAC,0EAFX;AAGE,IAAA,UAAU,EAAC,oBAHb;AAIE,IAAA,SAAS,EAAEnB,YAJb;AAKE,IAAA,SAAS,EAAEH,aALb;AAME,IAAA,YAAY,EAAE;AANhB;AAAA;AAAA;AAAA;AAAA,UAFJ;AAcD;;GAtEQR,M;UAQUN,W;;;KARVM,M;AAwET,eAAeA,MAAf","sourcesContent":["/* eslint-disable no-unused-vars */\r\n\r\nimport GoogleLogin from \"react-google-login\"\r\nimport { useState, useEffect } from \"react\"\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport axios from 'axios';\r\n// eslint-disable-next-line no-unused-vars\r\nimport Cookies from 'universal-cookie';\r\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\r\n\r\nfunction GgAuth() {\r\n\r\n  // eslint-disable-next-line no-undef\r\n\r\n  const [LoginData, setLoginData] = useState(\r\n    localStorage.getItem(\"loginData\") ? JSON.parse(localStorage.getItem(\"loginData\")) : null\r\n  )\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const handleFailure = (result) => {\r\n    alert(\"Cant take login data\")\r\n  }\r\n\r\n\r\n  const hangdleLogin = async (googleData) => {\r\n\r\n    try {\r\n      axios.post(\"https://fptnetwork.elemarkuspet.repl.co/api/auth/gg-login\", {\r\n        token: googleData.tokenId\r\n      }, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      }).then((res) => {\r\n\r\n\r\n        console.log(res.data.message)\r\n        setLoginData(res.data.message)\r\n        localStorage.setItem(\"loginData\", JSON.stringify({\r\n\r\n          email: res.data.message.email,\r\n          name: res.data.message.name,\r\n          picture: res.data.message.picture\r\n          \r\n        }))\r\n        bake_cookie(\r\n          \"accessToken\",\r\n          res.data.accessToken\r\n          )\r\n        navigate(\"/\")\r\n\r\n      }).catch(error => {\r\n        if (error.request) console.log(error.request)\r\n        if (error.respone) console.log(error.respone)\r\n      })\r\n\r\n\r\n\r\n\r\n    } catch (error) {\r\n      // console log error\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    \r\n      <GoogleLogin\r\n\r\n        clientId=\"368976437444-75mt0ttcg9i22emoapjf8ensoj6n18p3.apps.googleusercontent.com\"\r\n        buttonText=\"Login with google \"\r\n        onSuccess={hangdleLogin}\r\n        onFailure={handleFailure}\r\n        cookiePolicy={\"single_host_origin\"}\r\n\r\n    />\r\n       \r\n   \r\n  );\r\n}\r\n\r\nexport default GgAuth;\r\n"]},"metadata":{},"sourceType":"module"}